<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="5/5/2022 9:04:20 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="LAPTOP-BARTEK"
  DTS:CreatorName="LAPTOP-BARTEK\anczo"
  DTS:Description="SSIS Package Description"
  DTS:DTSID="{2C70A814-A75A-49B0-A8C1-1A23ECF3F708}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.2000.180"
  DTS:LocaleID="1045"
  DTS:MaxErrorCount="0"
  DTS:ObjectName="File1_SSIS"
  DTS:VersionBuild="64"
  DTS:VersionGUID="{7E5705AB-E9D6-4879-8F1D-771F2B808895}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[DestinationConnectionOLEDB]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{941A1299-958C-425E-B840-7CBE111A9491}"
      DTS:ObjectName="DestinationConnectionOLEDB">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=LAPTOP-BARTEK;Initial Catalog=DB_JPK_WB;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=false;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[SourceConnectionFlatFile]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{DBD03DCB-A093-48FF-A132-188D50F9A99D}"
      DTS:ObjectName="SourceConnectionFlatFile">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1045"
          DTS:HeaderRowDelimiter="_x007C_"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1250"
          DTS:ConnectionString="C:\Users\anczo\OneDrive\Dokumenty\SQL Server Management Studio\podmiot1.txt">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="250"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Column 0"
              DTS:DTSID="{A14D0D76-4AD8-4567-97DB-950D1DE10A14}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Czyszczenei tabel tymczasowych"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:DTSID="{47D15459-7539-452D-B32A-29AAE1C8E004}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:FailPackageOnFailure="True"
      DTS:LocaleID="-1"
      DTS:ObjectName="Czyszczenei tabel tymczasowych"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{941A1299-958C-425E-B840-7CBE111A9491}"
          SQLTask:BypassPrepare="False"
          SQLTask:SqlStatementSource="TRUNCATE TABLE [dbo].[FILE_1_TMP];&#xA;TRUNCATE TABLE [dbo].[FILE_2_TMP];" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Data Flow Task 1"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:DelayValidation="True"
      DTS:DTSID="{7E4B32E2-6E9E-4625-B472-8097E8EA4DBA}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:FailPackageOnFailure="True"
      DTS:LocaleID="-1"
      DTS:ObjectName="Data Flow Task 1"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          defaultBufferSize="3145728"
          version="1">
          <components>
            <component
              refId="Package\Data Flow Task 1\Data Conversion"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Data Conversion"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Data Flow Task 1\Data Conversion.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task 1\Data Conversion.Inputs[Data Conversion Input].Columns[IBAN]"
                      cachedCodepage="1250"
                      cachedDataType="str"
                      cachedLength="250"
                      cachedName="IBAN"
                      lineageId="Package\Data Flow Task 1\Validate and transform.Outputs[Output 0].Columns[IBAN]" />
                    <inputColumn
                      refId="Package\Data Flow Task 1\Data Conversion.Inputs[Data Conversion Input].Columns[NIP]"
                      cachedCodepage="1250"
                      cachedDataType="str"
                      cachedLength="250"
                      cachedName="NIP"
                      lineageId="Package\Data Flow Task 1\Validate and transform.Outputs[Output 0].Columns[NIP]" />
                    <inputColumn
                      refId="Package\Data Flow Task 1\Data Conversion.Inputs[Data Conversion Input].Columns[Nazwa]"
                      cachedCodepage="1250"
                      cachedDataType="str"
                      cachedLength="250"
                      cachedName="Nazwa"
                      lineageId="Package\Data Flow Task 1\Validate and transform.Outputs[Output 0].Columns[Nazwa]" />
                    <inputColumn
                      refId="Package\Data Flow Task 1\Data Conversion.Inputs[Data Conversion Input].Columns[REGON]"
                      cachedCodepage="1250"
                      cachedDataType="str"
                      cachedLength="250"
                      cachedName="REGON"
                      lineageId="Package\Data Flow Task 1\Validate and transform.Outputs[Output 0].Columns[REGON]" />
                    <inputColumn
                      refId="Package\Data Flow Task 1\Data Conversion.Inputs[Data Conversion Input].Columns[Urzad]"
                      cachedCodepage="1250"
                      cachedDataType="str"
                      cachedLength="250"
                      cachedName="Urzad"
                      lineageId="Package\Data Flow Task 1\Validate and transform.Outputs[Output 0].Columns[Urzad]" />
                    <inputColumn
                      refId="Package\Data Flow Task 1\Data Conversion.Inputs[Data Conversion Input].Columns[Kraj]"
                      cachedCodepage="1250"
                      cachedDataType="str"
                      cachedLength="250"
                      cachedName="Kraj"
                      lineageId="Package\Data Flow Task 1\Validate and transform.Outputs[Output 0].Columns[Kraj]" />
                    <inputColumn
                      refId="Package\Data Flow Task 1\Data Conversion.Inputs[Data Conversion Input].Columns[Woj]"
                      cachedCodepage="1250"
                      cachedDataType="str"
                      cachedLength="250"
                      cachedName="Woj"
                      lineageId="Package\Data Flow Task 1\Validate and transform.Outputs[Output 0].Columns[Woj]" />
                    <inputColumn
                      refId="Package\Data Flow Task 1\Data Conversion.Inputs[Data Conversion Input].Columns[Powiat]"
                      cachedCodepage="1250"
                      cachedDataType="str"
                      cachedLength="250"
                      cachedName="Powiat"
                      lineageId="Package\Data Flow Task 1\Validate and transform.Outputs[Output 0].Columns[Powiat]" />
                    <inputColumn
                      refId="Package\Data Flow Task 1\Data Conversion.Inputs[Data Conversion Input].Columns[gmina]"
                      cachedCodepage="1250"
                      cachedDataType="str"
                      cachedLength="250"
                      cachedName="gmina"
                      lineageId="Package\Data Flow Task 1\Validate and transform.Outputs[Output 0].Columns[gmina]" />
                    <inputColumn
                      refId="Package\Data Flow Task 1\Data Conversion.Inputs[Data Conversion Input].Columns[Ulica]"
                      cachedCodepage="1250"
                      cachedDataType="str"
                      cachedLength="250"
                      cachedName="Ulica"
                      lineageId="Package\Data Flow Task 1\Validate and transform.Outputs[Output 0].Columns[Ulica]" />
                    <inputColumn
                      refId="Package\Data Flow Task 1\Data Conversion.Inputs[Data Conversion Input].Columns[nr_domu]"
                      cachedCodepage="1250"
                      cachedDataType="str"
                      cachedLength="250"
                      cachedName="nr_domu"
                      lineageId="Package\Data Flow Task 1\Validate and transform.Outputs[Output 0].Columns[nr_domu]" />
                    <inputColumn
                      refId="Package\Data Flow Task 1\Data Conversion.Inputs[Data Conversion Input].Columns[nr_lokalu]"
                      cachedCodepage="1250"
                      cachedDataType="str"
                      cachedLength="250"
                      cachedName="nr_lokalu"
                      lineageId="Package\Data Flow Task 1\Validate and transform.Outputs[Output 0].Columns[nr_lokalu]" />
                    <inputColumn
                      refId="Package\Data Flow Task 1\Data Conversion.Inputs[Data Conversion Input].Columns[miejscowosc]"
                      cachedCodepage="1250"
                      cachedDataType="str"
                      cachedLength="250"
                      cachedName="miejscowosc"
                      lineageId="Package\Data Flow Task 1\Validate and transform.Outputs[Output 0].Columns[miejscowosc]" />
                    <inputColumn
                      refId="Package\Data Flow Task 1\Data Conversion.Inputs[Data Conversion Input].Columns[kod_pocztowy]"
                      cachedCodepage="1250"
                      cachedDataType="str"
                      cachedLength="250"
                      cachedName="kod_pocztowy"
                      lineageId="Package\Data Flow Task 1\Validate and transform.Outputs[Output 0].Columns[kod_pocztowy]" />
                    <inputColumn
                      refId="Package\Data Flow Task 1\Data Conversion.Inputs[Data Conversion Input].Columns[poczta]"
                      cachedCodepage="1250"
                      cachedDataType="str"
                      cachedLength="250"
                      cachedName="poczta"
                      lineageId="Package\Data Flow Task 1\Validate and transform.Outputs[Output 0].Columns[poczta]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task 1\Data Conversion.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\Data Flow Task 1\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task 1\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of IBAN]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Data Flow Task 1\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of IBAN]"
                      name="Copy of IBAN"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Data Flow Task 1\Validate and transform.Outputs[Output 0].Columns[IBAN]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task 1\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of NIP]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Data Flow Task 1\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of NIP]"
                      name="Copy of NIP"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Data Flow Task 1\Validate and transform.Outputs[Output 0].Columns[NIP]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task 1\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Nazwa]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Data Flow Task 1\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Nazwa]"
                      name="Copy of Nazwa"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Data Flow Task 1\Validate and transform.Outputs[Output 0].Columns[Nazwa]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task 1\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of REGON]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Data Flow Task 1\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of REGON]"
                      name="Copy of REGON"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Data Flow Task 1\Validate and transform.Outputs[Output 0].Columns[REGON]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task 1\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Urzad]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Data Flow Task 1\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Urzad]"
                      name="Copy of Urzad"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Data Flow Task 1\Validate and transform.Outputs[Output 0].Columns[Urzad]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task 1\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Kraj]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Data Flow Task 1\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Kraj]"
                      name="Copy of Kraj"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Data Flow Task 1\Validate and transform.Outputs[Output 0].Columns[Kraj]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task 1\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Woj]"
                      codePage="1250"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Data Flow Task 1\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Woj]"
                      name="Copy of Woj"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Data Flow Task 1\Validate and transform.Outputs[Output 0].Columns[Woj]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task 1\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Powiat]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Data Flow Task 1\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Powiat]"
                      name="Copy of Powiat"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Data Flow Task 1\Validate and transform.Outputs[Output 0].Columns[Powiat]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task 1\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of gmina]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Data Flow Task 1\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of gmina]"
                      name="Copy of gmina"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Data Flow Task 1\Validate and transform.Outputs[Output 0].Columns[gmina]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task 1\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Ulica]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Data Flow Task 1\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Ulica]"
                      name="Copy of Ulica"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Data Flow Task 1\Validate and transform.Outputs[Output 0].Columns[Ulica]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task 1\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of nr_domu]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Data Flow Task 1\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of nr_domu]"
                      name="Copy of nr_domu"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Data Flow Task 1\Validate and transform.Outputs[Output 0].Columns[nr_domu]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task 1\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of nr_lokalu]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Data Flow Task 1\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of nr_lokalu]"
                      name="Copy of nr_lokalu"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Data Flow Task 1\Validate and transform.Outputs[Output 0].Columns[nr_lokalu]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task 1\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of miejscowosc]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Data Flow Task 1\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of miejscowosc]"
                      name="Copy of miejscowosc"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Data Flow Task 1\Validate and transform.Outputs[Output 0].Columns[miejscowosc]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task 1\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of kod_pocztowy]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Data Flow Task 1\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of kod_pocztowy]"
                      name="Copy of kod_pocztowy"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Data Flow Task 1\Validate and transform.Outputs[Output 0].Columns[kod_pocztowy]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task 1\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of poczta]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Data Flow Task 1\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of poczta]"
                      name="Copy of poczta"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Data Flow Task 1\Validate and transform.Outputs[Output 0].Columns[poczta]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task 1\Data Conversion.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\Data Flow Task 1\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task 1\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task 1\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Flow Task 1\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task 1\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task 1\Data Conversion 1"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Data Conversion 1"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Data Flow Task 1\Data Conversion 1.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task 1\Data Conversion 1.Inputs[Data Conversion Input].Columns[Saldo_przed]"
                      cachedDataType="numeric"
                      cachedName="Saldo_przed"
                      cachedPrecision="18"
                      cachedScale="4"
                      lineageId="Package\Data Flow Task 1\Read IBAN file and validate data.Outputs[Output 0].Columns[Saldo_przed]" />
                    <inputColumn
                      refId="Package\Data Flow Task 1\Data Conversion 1.Inputs[Data Conversion Input].Columns[Data]"
                      cachedCodepage="1250"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Data"
                      lineageId="Package\Data Flow Task 1\Read IBAN file and validate data.Outputs[Output 0].Columns[Data]" />
                    <inputColumn
                      refId="Package\Data Flow Task 1\Data Conversion 1.Inputs[Data Conversion Input].Columns[Kontrahent]"
                      cachedCodepage="1250"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Kontrahent"
                      lineageId="Package\Data Flow Task 1\Read IBAN file and validate data.Outputs[Output 0].Columns[Kontrahent]" />
                    <inputColumn
                      refId="Package\Data Flow Task 1\Data Conversion 1.Inputs[Data Conversion Input].Columns[Opis]"
                      cachedCodepage="1250"
                      cachedDataType="str"
                      cachedLength="250"
                      cachedName="Opis"
                      lineageId="Package\Data Flow Task 1\Read IBAN file and validate data.Outputs[Output 0].Columns[Opis]" />
                    <inputColumn
                      refId="Package\Data Flow Task 1\Data Conversion 1.Inputs[Data Conversion Input].Columns[Saldo_po]"
                      cachedDataType="numeric"
                      cachedName="Saldo_po"
                      cachedPrecision="18"
                      cachedScale="4"
                      lineageId="Package\Data Flow Task 1\Read IBAN file and validate data.Outputs[Output 0].Columns[Saldo_po]" />
                    <inputColumn
                      refId="Package\Data Flow Task 1\Data Conversion 1.Inputs[Data Conversion Input].Columns[Kwota]"
                      cachedDataType="numeric"
                      cachedName="Kwota"
                      cachedPrecision="18"
                      cachedScale="4"
                      lineageId="Package\Data Flow Task 1\Read IBAN file and validate data.Outputs[Output 0].Columns[Kwota]" />
                    <inputColumn
                      refId="Package\Data Flow Task 1\Data Conversion 1.Inputs[Data Conversion Input].Columns[IBAN]"
                      cachedCodepage="1250"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="IBAN"
                      lineageId="Package\Data Flow Task 1\Read IBAN file and validate data.Outputs[Output 0].Columns[IBAN]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task 1\Data Conversion 1.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\Data Flow Task 1\Data Conversion 1.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task 1\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of Saldo]"
                      dataType="numeric"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Data Flow Task 1\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of Saldo]"
                      name="Copy of Saldo"
                      precision="18"
                      scale="4"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Data Flow Task 1\Read IBAN file and validate data.Outputs[Output 0].Columns[Saldo_przed]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task 1\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of Data]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Data Flow Task 1\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of Data]"
                      name="Copy of Data"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Data Flow Task 1\Read IBAN file and validate data.Outputs[Output 0].Columns[Data]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task 1\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of Kontrahent]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Data Flow Task 1\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of Kontrahent]"
                      name="Copy of Kontrahent"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Data Flow Task 1\Read IBAN file and validate data.Outputs[Output 0].Columns[Kontrahent]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task 1\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of Opis]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="250"
                      lineageId="Package\Data Flow Task 1\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of Opis]"
                      name="Copy of Opis"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Data Flow Task 1\Read IBAN file and validate data.Outputs[Output 0].Columns[Opis]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task 1\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of saldo_po]"
                      dataType="numeric"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Data Flow Task 1\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of saldo_po]"
                      name="Copy of saldo_po"
                      precision="18"
                      scale="4"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Data Flow Task 1\Read IBAN file and validate data.Outputs[Output 0].Columns[Saldo_po]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task 1\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of Kwota]"
                      dataType="numeric"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Data Flow Task 1\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of Kwota]"
                      name="Copy of Kwota"
                      precision="18"
                      scale="4"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Data Flow Task 1\Read IBAN file and validate data.Outputs[Output 0].Columns[Kwota]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task 1\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of IBAN]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Data Flow Task 1\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of IBAN]"
                      name="Copy of IBAN"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Data Flow Task 1\Read IBAN file and validate data.Outputs[Output 0].Columns[IBAN]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task 1\Data Conversion 1.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\Data Flow Task 1\Data Conversion 1.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task 1\Data Conversion 1.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task 1\Data Conversion 1.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Flow Task 1\Data Conversion 1.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task 1\Data Conversion 1.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task 1\Destination - FILE_1_TMP"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="Destination - FILE_1_TMP"
              usesDispositions="true"
              validateExternalMetadata="False"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[FILE_1_TMP]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1250</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS,FIRE_TRIGGERS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Flow Task 1\Destination - FILE_1_TMP.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[DestinationConnectionOLEDB]"
                  connectionManagerRefId="Package.ConnectionManagers[DestinationConnectionOLEDB]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Data Flow Task 1\Destination - FILE_1_TMP.Inputs[Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task 1\Destination - FILE_1_TMP.Inputs[Destination Input].Columns[Copy of Nazwa]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Copy of Nazwa"
                      externalMetadataColumnId="Package\Data Flow Task 1\Destination - FILE_1_TMP.Inputs[Destination Input].ExternalColumns[nazwa]"
                      lineageId="Package\Data Flow Task 1\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Nazwa]" />
                    <inputColumn
                      refId="Package\Data Flow Task 1\Destination - FILE_1_TMP.Inputs[Destination Input].Columns[Copy of REGON]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Copy of REGON"
                      externalMetadataColumnId="Package\Data Flow Task 1\Destination - FILE_1_TMP.Inputs[Destination Input].ExternalColumns[REGON]"
                      lineageId="Package\Data Flow Task 1\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of REGON]" />
                    <inputColumn
                      refId="Package\Data Flow Task 1\Destination - FILE_1_TMP.Inputs[Destination Input].Columns[Copy of IBAN]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Copy of IBAN"
                      externalMetadataColumnId="Package\Data Flow Task 1\Destination - FILE_1_TMP.Inputs[Destination Input].ExternalColumns[IBAN]"
                      lineageId="Package\Data Flow Task 1\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of IBAN]" />
                    <inputColumn
                      refId="Package\Data Flow Task 1\Destination - FILE_1_TMP.Inputs[Destination Input].Columns[Copy of Urzad]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Copy of Urzad"
                      externalMetadataColumnId="Package\Data Flow Task 1\Destination - FILE_1_TMP.Inputs[Destination Input].ExternalColumns[kod_urzedu]"
                      lineageId="Package\Data Flow Task 1\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Urzad]" />
                    <inputColumn
                      refId="Package\Data Flow Task 1\Destination - FILE_1_TMP.Inputs[Destination Input].Columns[Copy of Kraj]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Copy of Kraj"
                      externalMetadataColumnId="Package\Data Flow Task 1\Destination - FILE_1_TMP.Inputs[Destination Input].ExternalColumns[kod_kraju]"
                      lineageId="Package\Data Flow Task 1\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Kraj]" />
                    <inputColumn
                      refId="Package\Data Flow Task 1\Destination - FILE_1_TMP.Inputs[Destination Input].Columns[Copy of Woj]"
                      cachedCodepage="1250"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Copy of Woj"
                      externalMetadataColumnId="Package\Data Flow Task 1\Destination - FILE_1_TMP.Inputs[Destination Input].ExternalColumns[wojewodztwo]"
                      lineageId="Package\Data Flow Task 1\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Woj]" />
                    <inputColumn
                      refId="Package\Data Flow Task 1\Destination - FILE_1_TMP.Inputs[Destination Input].Columns[Copy of Powiat]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Copy of Powiat"
                      externalMetadataColumnId="Package\Data Flow Task 1\Destination - FILE_1_TMP.Inputs[Destination Input].ExternalColumns[powiat]"
                      lineageId="Package\Data Flow Task 1\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Powiat]" />
                    <inputColumn
                      refId="Package\Data Flow Task 1\Destination - FILE_1_TMP.Inputs[Destination Input].Columns[Copy of NIP]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Copy of NIP"
                      externalMetadataColumnId="Package\Data Flow Task 1\Destination - FILE_1_TMP.Inputs[Destination Input].ExternalColumns[NIP]"
                      lineageId="Package\Data Flow Task 1\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of NIP]" />
                    <inputColumn
                      refId="Package\Data Flow Task 1\Destination - FILE_1_TMP.Inputs[Destination Input].Columns[Copy of gmina]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Copy of gmina"
                      externalMetadataColumnId="Package\Data Flow Task 1\Destination - FILE_1_TMP.Inputs[Destination Input].ExternalColumns[gmina]"
                      lineageId="Package\Data Flow Task 1\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of gmina]" />
                    <inputColumn
                      refId="Package\Data Flow Task 1\Destination - FILE_1_TMP.Inputs[Destination Input].Columns[Copy of Ulica]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Copy of Ulica"
                      externalMetadataColumnId="Package\Data Flow Task 1\Destination - FILE_1_TMP.Inputs[Destination Input].ExternalColumns[ulica]"
                      lineageId="Package\Data Flow Task 1\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Ulica]" />
                    <inputColumn
                      refId="Package\Data Flow Task 1\Destination - FILE_1_TMP.Inputs[Destination Input].Columns[Copy of nr_domu]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Copy of nr_domu"
                      externalMetadataColumnId="Package\Data Flow Task 1\Destination - FILE_1_TMP.Inputs[Destination Input].ExternalColumns[nr_domu]"
                      lineageId="Package\Data Flow Task 1\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of nr_domu]" />
                    <inputColumn
                      refId="Package\Data Flow Task 1\Destination - FILE_1_TMP.Inputs[Destination Input].Columns[Copy of nr_lokalu]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Copy of nr_lokalu"
                      externalMetadataColumnId="Package\Data Flow Task 1\Destination - FILE_1_TMP.Inputs[Destination Input].ExternalColumns[nr_lokalu]"
                      lineageId="Package\Data Flow Task 1\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of nr_lokalu]" />
                    <inputColumn
                      refId="Package\Data Flow Task 1\Destination - FILE_1_TMP.Inputs[Destination Input].Columns[Copy of miejscowosc]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Copy of miejscowosc"
                      externalMetadataColumnId="Package\Data Flow Task 1\Destination - FILE_1_TMP.Inputs[Destination Input].ExternalColumns[miejscowosc]"
                      lineageId="Package\Data Flow Task 1\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of miejscowosc]" />
                    <inputColumn
                      refId="Package\Data Flow Task 1\Destination - FILE_1_TMP.Inputs[Destination Input].Columns[Copy of poczta]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Copy of poczta"
                      externalMetadataColumnId="Package\Data Flow Task 1\Destination - FILE_1_TMP.Inputs[Destination Input].ExternalColumns[poczta]"
                      lineageId="Package\Data Flow Task 1\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of poczta]" />
                    <inputColumn
                      refId="Package\Data Flow Task 1\Destination - FILE_1_TMP.Inputs[Destination Input].Columns[Copy of kod_pocztowy]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Copy of kod_pocztowy"
                      externalMetadataColumnId="Package\Data Flow Task 1\Destination - FILE_1_TMP.Inputs[Destination Input].ExternalColumns[kod_pocztowy]"
                      lineageId="Package\Data Flow Task 1\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of kod_pocztowy]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Data Flow Task 1\Destination - FILE_1_TMP.Inputs[Destination Input].ExternalColumns[NIP]"
                      dataType="wstr"
                      length="10"
                      name="NIP" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task 1\Destination - FILE_1_TMP.Inputs[Destination Input].ExternalColumns[nazwa]"
                      dataType="wstr"
                      length="100"
                      name="nazwa" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task 1\Destination - FILE_1_TMP.Inputs[Destination Input].ExternalColumns[REGON]"
                      dataType="wstr"
                      length="9"
                      name="REGON" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task 1\Destination - FILE_1_TMP.Inputs[Destination Input].ExternalColumns[IBAN]"
                      dataType="wstr"
                      length="26"
                      name="IBAN" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task 1\Destination - FILE_1_TMP.Inputs[Destination Input].ExternalColumns[kod_urzedu]"
                      dataType="wstr"
                      length="4"
                      name="kod_urzedu" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task 1\Destination - FILE_1_TMP.Inputs[Destination Input].ExternalColumns[kod_kraju]"
                      dataType="wstr"
                      length="2"
                      name="kod_kraju" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task 1\Destination - FILE_1_TMP.Inputs[Destination Input].ExternalColumns[wojewodztwo]"
                      codePage="1250"
                      dataType="str"
                      length="50"
                      name="wojewodztwo" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task 1\Destination - FILE_1_TMP.Inputs[Destination Input].ExternalColumns[powiat]"
                      dataType="wstr"
                      length="50"
                      name="powiat" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task 1\Destination - FILE_1_TMP.Inputs[Destination Input].ExternalColumns[gmina]"
                      dataType="wstr"
                      length="50"
                      name="gmina" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task 1\Destination - FILE_1_TMP.Inputs[Destination Input].ExternalColumns[ulica]"
                      dataType="wstr"
                      length="50"
                      name="ulica" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task 1\Destination - FILE_1_TMP.Inputs[Destination Input].ExternalColumns[nr_domu]"
                      dataType="wstr"
                      length="50"
                      name="nr_domu" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task 1\Destination - FILE_1_TMP.Inputs[Destination Input].ExternalColumns[nr_lokalu]"
                      dataType="wstr"
                      length="50"
                      name="nr_lokalu" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task 1\Destination - FILE_1_TMP.Inputs[Destination Input].ExternalColumns[miejscowosc]"
                      dataType="wstr"
                      length="50"
                      name="miejscowosc" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task 1\Destination - FILE_1_TMP.Inputs[Destination Input].ExternalColumns[kod_pocztowy]"
                      dataType="wstr"
                      length="6"
                      name="kod_pocztowy" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task 1\Destination - FILE_1_TMP.Inputs[Destination Input].ExternalColumns[poczta]"
                      dataType="wstr"
                      length="50"
                      name="poczta" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task 1\Destination - FILE_1_TMP.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Data Flow Task 1\Destination - FILE_1_TMP.Inputs[Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task 1\Destination - FILE_1_TMP.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task 1\Destination - FILE_1_TMP.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Flow Task 1\Destination - FILE_1_TMP.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task 1\Destination - FILE_1_TMP.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task 1\Multicast"
              componentClassID="Microsoft.Multicast"
              contactInfo="Multicast;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Distributes every input row to every row in one or more outputs. For example, branch your data flow to make a copy of data so that some values can be masked before sharing with external partners."
              name="Multicast">
              <inputs>
                <input
                  refId="Package\Data Flow Task 1\Multicast.Inputs[Multicast Input 1]"
                  name="Multicast Input 1">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task 1\Multicast.Outputs[Multicast Output 1]"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 1"
                  synchronousInputId="Package\Data Flow Task 1\Multicast.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task 1\Multicast.Outputs[Multicast Output 2]"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 2"
                  synchronousInputId="Package\Data Flow Task 1\Multicast.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task 1\Multicast.Outputs[Multicast Output 4]"
                  dangling="true"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 4"
                  synchronousInputId="Package\Data Flow Task 1\Multicast.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task 1\OLE DB Destination"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="OLE DB Destination"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[FILE_2_TMP]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1250</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS,FIRE_TRIGGERS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Flow Task 1\OLE DB Destination.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[DestinationConnectionOLEDB]"
                  connectionManagerRefId="Package.ConnectionManagers[DestinationConnectionOLEDB]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Data]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Copy of Data"
                      externalMetadataColumnId="Package\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[data]"
                      lineageId="Package\Data Flow Task 1\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of Data]" />
                    <inputColumn
                      refId="Package\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Kontrahent]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Copy of Kontrahent"
                      externalMetadataColumnId="Package\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[kontrahent]"
                      lineageId="Package\Data Flow Task 1\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of Kontrahent]" />
                    <inputColumn
                      refId="Package\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Opis]"
                      cachedDataType="wstr"
                      cachedLength="250"
                      cachedName="Copy of Opis"
                      externalMetadataColumnId="Package\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[opis]"
                      lineageId="Package\Data Flow Task 1\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of Opis]" />
                    <inputColumn
                      refId="Package\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Saldo]"
                      cachedDataType="numeric"
                      cachedName="Copy of Saldo"
                      cachedPrecision="18"
                      cachedScale="4"
                      externalMetadataColumnId="Package\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Saldo_przed]"
                      lineageId="Package\Data Flow Task 1\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of Saldo]" />
                    <inputColumn
                      refId="Package\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of saldo_po]"
                      cachedDataType="numeric"
                      cachedName="Copy of saldo_po"
                      cachedPrecision="18"
                      cachedScale="4"
                      externalMetadataColumnId="Package\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Saldo_po]"
                      lineageId="Package\Data Flow Task 1\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of saldo_po]" />
                    <inputColumn
                      refId="Package\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Kwota]"
                      cachedDataType="numeric"
                      cachedName="Copy of Kwota"
                      cachedPrecision="18"
                      cachedScale="4"
                      externalMetadataColumnId="Package\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[kwota]"
                      lineageId="Package\Data Flow Task 1\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of Kwota]" />
                    <inputColumn
                      refId="Package\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of IBAN]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Copy of IBAN"
                      externalMetadataColumnId="Package\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[IBAN]"
                      lineageId="Package\Data Flow Task 1\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of IBAN]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[data]"
                      dataType="wstr"
                      length="50"
                      name="data" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[kontrahent]"
                      dataType="wstr"
                      length="50"
                      name="kontrahent" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[opis]"
                      dataType="wstr"
                      length="250"
                      name="opis" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[kwota]"
                      dataType="numeric"
                      name="kwota"
                      precision="19"
                      scale="4" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Saldo_przed]"
                      dataType="numeric"
                      name="Saldo_przed"
                      precision="19"
                      scale="4" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Saldo_po]"
                      dataType="numeric"
                      name="Saldo_po"
                      precision="19"
                      scale="4" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[IBAN]"
                      dataType="wstr"
                      length="30"
                      name="IBAN" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task 1\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task 1\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task 1\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Flow Task 1\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task 1\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task 1\Read IBAN file and validate data"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;12"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Read IBAN file and validate data"
              version="12">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    int InputsFinished = 0;

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

        if (Buffer.EndOfRowset)
        {
            InputsFinished = InputsFinished + 1;
            if (InputsFinished == 1)
            {
                FinishOutputs();
                MarkOutputsFinished();
            }
        }

    }

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

    }

    public virtual void CreateNewOutputRows()
    {
    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Collections.Generic;
using System.Data;
using System.Globalization;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    int current_row = 1;
    String[] lines;
    List<String> rows = new List<String>();

    String folderPath = "C:\\Users\\anczo\\OneDrive\\Dokumenty\\SQL Server Management Studio\\";
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        if(current_row == 1)
        {
            String IBAN = Row.IBAN;
            lines= File.ReadAllLines(folderPath+ IBAN +".txt", Encoding.UTF8);
            double saldo_poczatkowe = 0.0;
            try
            {
                saldo_poczatkowe = double.Parse(lines[0].Trim(), CultureInfo.InvariantCulture);
            }
            catch (FormatException e)
            {
                throw new Exception("Error in first line of file: " + IBAN + ".txt");
            }

            for (int i = 1; i < lines.Length; i++)
            {
                if (!validateRow(lines[i]))
                {
                    throw new Exception("Error format in " +(i+1)+ " line of file");
                }
                String[] tmp = lines[i].Split(';');

                String data = tmp[0];
                String kontrahent = tmp[1];
                String opis = tmp[2];
                double kwota = double.Parse(tmp[3].Trim(), CultureInfo.InvariantCulture);

                Output0Buffer.AddRow();
                Output0Buffer.IBAN = IBAN;
                Output0Buffer.Saldoprzed = (decimal)saldo_poczatkowe;
                Output0Buffer.Data = data;
                Output0Buffer.Kontrahent = kontrahent;
                Output0Buffer.Opis = opis;
                Output0Buffer.Kwota = (decimal)kwota;
                Output0Buffer.Saldopo = (decimal)(saldo_poczatkowe + kwota);

                saldo_poczatkowe += kwota;
            }

        }
        


    }

    public Boolean validateRow(String row)
    {
        {
            Boolean check = false;
            System.DateTime temp;

            string strRegex = @"(^[a-zA-Z0-9]{1,}$)";
            string strRegex1 = @"(^[-]?[0-9]{1,}.[0-9]{2}$)";
            string dateRegex = @"(^([0-9]{2}.[0-9]{2}.[0-9]{4})$)";

            string[] tmp = row.Split(';');
            bool a = Regex.IsMatch(tmp[0], dateRegex);
            bool b = Regex.IsMatch(tmp[1], strRegex);
            bool c = Regex.IsMatch(tmp[2], strRegex);
            bool d = Regex.IsMatch(tmp[3], strRegex1);
            if(tmp.Length == 4 && a && b && c && d)
            {
                check = true;
            }
            return check;
        }
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String IBAN
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool IBAN_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String IBAN
    {
        set
        {
            this[0] = value;
        }
    }
    public bool IBAN_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal Saldoprzed
    {
        set
        {
            this[1] = value;
        }
    }
    public bool Saldoprzed_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Data
    {
        set
        {
            this[2] = value;
        }
    }
    public bool Data_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Kontrahent
    {
        set
        {
            this[3] = value;
        }
    }
    public bool Kontrahent_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Opis
    {
        set
        {
            this[4] = value;
        }
    }
    public bool Opis_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal Kwota
    {
        set
        {
            this[5] = value;
        }
    }
    public bool Kwota_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal Saldopo
    {
        set
        {
            this[6] = value;
        }
    }
    public bool Saldopo_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_21bbcfec969e4e76b4ee128deca72bda.Properties.Settings.get_Default():SC_21bbcfec969e4e76b4ee128deca72bda.Properties.Sett" +
    "ings")]

namespace SC_21bbcfec969e4e76b4ee128deca72bda.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_21bbcfec969e4e76b4ee128deca72bda.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{59794fa7-4eda-4b6a-ab26-4d714238b4ea}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_21bbcfec969e4e76b4ee128deca72bda</RootNamespace>
    <AssemblyName>SC_21bbcfec969e4e76b4ee128deca72bda</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_21bbcfec969e4e76b4ee128deca72bda" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_21bbcfec969e4e76b4ee128deca72bda</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_21bbcfec969e4e76b4ee128deca72bda</msb:DisplayName>
    <msb:ProjectId>{8CDE5CC0-7FB7-4266-874D-5F6334585E5F}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_21bbcfec969e4e76b4ee128deca72bda.csproj" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_21bbcfec969e4e76b4ee128deca72bda")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_21bbcfec969e4e76b4ee128deca72bda")]
[assembly: AssemblyCopyright("Copyright @  2022")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_21bbcfec969e4e76b4ee128deca72bda.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_21bbcfec969e4e76b4ee128deca72bda.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_21bbcfec969e4e76b4ee128deca72bda.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_21bbcfec969e4e76b4ee128deca72bda.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_21bbcfec969e4e76b4ee128deca72bda.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_21bbcfec969e4e76b4ee128deca72bda.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAIC2dmIAAAAAAAAAAOAAIiALATAAAB4AAAAIAAAAAAAA4jwA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAJA8AABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA6BwAAAAgAAAAHgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAgAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAJgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADE
PAAAAAAAAEgAAAACAAUANCUAAKQWAAABAAAAAAAAANg7AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACiobMAUAbAEAAAEAABECewEAAAQX
QF8BAAADbwcAAAYKAgJ7BAAABAZyAQAAcCgSAAAKKBMAAAooFAAACn0CAAAEIwAAAAAAAAAACwJ7
AgAABBaabxUAAAooFgAACigXAAAKC94XJnILAABwBnIBAABwKBIAAApzGAAACnoXDDjnAAAAAgJ7
AgAABAiaKAQAAAYtIXJHAABwCBdYEwcSBygZAAAKcmkAAHAoEgAACnMYAAAKegJ7AgAABAiaF40k
AAABJRYfO51vGgAACiUWmg0lF5oTBCUYmhMFGZpvFQAACigWAAAKKBcAAAoTBgJ7BwAABG8aAAAG
AnsHAAAEBm8MAAAGAnsHAAAEBygbAAAKbw4AAAYCewcAAAQJbxAAAAYCewcAAAQRBG8SAAAGAnsH
AAAEEQVvFAAABgJ7BwAABBEGKBsAAApvFgAABgJ7BwAABAcRBlgoGwAACm8YAAAGBxEGWAsIF1gM
CAJ7AgAABI5pPwv///8qARAAAAAAPgAaWAAXDwAAARMwBQBoAAAAAgAAERYKcoUAAHALcq0AAHAM
cuMAAHANAxeNJAAAASUWHzudbxoAAAolFpoJKBwAAAoTBCUXmgcoHAAAChMFJRiaBygcAAAKEwYl
GZoIKBwAAAoTB45pGv4BEQRfEQVfEQZfEQdfLAIXCgYqkgIXfQEAAAQCcx0AAAp9AwAABAJyJQEA
cH0EAAAEAigdAAAGKioCAwQFKB4AAAoqUgJ7HwAACgJ7IAAAChaUbyEAAAoqIgIWKCIAAAoqHgIo
IwAACioeAigkAAAKKiYCFgMoJQAACipaAywIAhYoJgAACipypQEAcHMnAAAKejoCFwOMEwAAASgl
AAAKKloDLAgCFygmAAAKKnKlAQBwcycAAAp6JgIYAyglAAAKKloDLAgCGCgmAAAKKnKlAQBwcycA
AAp6JgIZAyglAAAKKloDLAgCGSgmAAAKKnKlAQBwcycAAAp6JgIaAyglAAAKKloDLAgCGigmAAAK
KnKlAQBwcycAAAp6OgIbA4wTAAABKCUAAAoqWgMsCAIbKCYAAAoqcqUBAHBzJwAACno6AhwDjBMA
AAEoJQAACipaAywIAhwoJgAACipypQEAcHMnAAAKeh4CKCgAAAoqHgIoKQAACip+AigqAAAKAgJz
JQAABn0FAAAEAgJzJgAABn0GAAAEKhMwBABPAAAAAAAAAARyQgIAcBpvKwAACiwVAgUCAygsAAAK
DgRzBgAABm8jAAAGBW8tAAAKLCMCAnsIAAAEF1h9CAAABAJ7CAAABBczDAJvHwAABgIoIAAABioG
Km4CewcAAAQsEgJ7BwAABG8bAAAGAhR9BwAABCoAAAATMAUAPQAAAAMAABEWCisuBAaUDgRyUgIA
cCguAAAKMxkCBQaaAgQGlCgsAAAKDgRzCwAABn0HAAAEBhdYCgYDMs4CbyIAAAYqSisHAgNvJAAA
BgNvCQAABi3xKjoCKC8AAAoCA30JAAAEKjoCKC8AAAoCA30KAAAEKh4CKC8AAAoqrn4LAAAELR5y
ZAIAcNAIAAACKDAAAApvMQAACnMyAAAKgAsAAAR+CwAABCoafgwAAAQqHgKADAAABCoafg0AAAQq
HgIoMwAACioucywAAAaADQAABCpCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAAB8
CAAAI34AAOgIAACoCAAAI1N0cmluZ3MAAAAAkBEAANgCAAAjVVMAaBQAABAAAAAjR1VJRAAAAHgU
AAAsAgAAI0Jsb2IAAAAAAAAAAgAAAVcVogkJAQAAAPoBMwAWAAABAAAAKgAAAAkAAAANAAAALQAA
ACMAAAAzAAAAEAAAAAMAAAAEAAAAEwAAABQAAAABAAAAAQAAAAQAAAABAAAAAADfAwEAAAAAAAYA
qQL8BQYAPQP8BQYA9QHpBQ8AcAYAAAYAIgL1BAYAjAL1BAYAbQL1BAYAJAP1BAYAyQL1BAYA4gL1
BAYAOQL1BAYAVAKBAwoA/QInAQYAAQCQAAYAIQWoBAoAsQUnAQ4AogUnAQoAWgUnAQYAwQOoBAoA
2wcnAQYAageoBAYA2AHpBQYAwgUcBgYAQgXgBBIAqAHJAxIACQLJAxIAigHLBAYAvQH8BQYApwOo
BAYAeANJCAYAGAFGAAYA7QCoBAYAdwWoBAYAJwWoBAYACACoBAYAcgWoBBIAkwgJBwYABwWoBAYA
MQWoBAYASAGoBAYA9ACoBAYAnQj1BAAAAAAXAAAAAAABAAEAAQAQAMAEAAAUAAEAAQABABAAhwUA
AEEABQAGAAEAEACUBQAAQQAFAAsAAQAQAL0HAABRAAUAHQABABAAKAcAAFUACQAlAAEAEACuBgAA
VQAKACYAAAAQACMGfwZVAAsAJwAAARAA8AZ/Bm0ADQArAAEAhwjXAAEAxQbaAAEAXgfeAAEAtgPl
AAYAKAfoAAYArgbsAAYAlAXwAAEAqwDXAAEAywf0AAEAywf0ABEAtAT4ABEAZQH8ABEA3QAAAVAg
AAAAAMYAWwMGAAEAWCAAAAAAxgBmAwYAAQBgIAAAAADGAGgIBAEBAOghAAAAAIYAXAgKAQIAXCIA
AAAAhhjSBQYAAwCBIgAAAACGGNIFbwADAIwiAAAAAIYINAA6AAYAoSIAAAAAhggHBIsABgCqIgAA
AACGAH8IiwAGALIiAAAAAIYAhAeLAAYAgSIAAAAAhhjSBW8ABgC6IgAAAACGCD0AEAAJAMQiAAAA
AIYIFwQPAQoA2yIAAAAAhgjOABQBCwDqIgAAAACGCEgEDwEMAAEjAAAAAIYIdAAQAA0ACyMAAAAA
hggnBA8BDgAiIwAAAACGCK4HEAAPACwjAAAAAIYIgQQPARAAQyMAAAAAhgj5BhAAEQBNIwAAAACG
CHEEDwESAGQjAAAAAIYIfQAUARMAcyMAAAAAhgg3BA8BFACKIwAAAACGCE4FFAEVAJkjAAAAAIYI
XgQPARYAsCMAAAAAhgBVCAYAFwC4IwAAAACGAIEHBgAXALIiAAAAAIYAhAeLABcAwCMAAAAAhhjS
BQYAFwDgIwAAAADGADAIGgEXADskAAAAAMYBPAcGABsAPSQAAAAAgQC6AAYAGwBcJAAAAADGAD0I
JAEbADskAAAAAMYBSgcGAB8ApSQAAAAAxgEpCAQBHwA7JAAAAADGAWgIBAEgALgkAAAAAIYY0gUw
ASEAxyQAAAAAhhjSBTABIgDWJAAAAACDGNIFBgAjAN4kAAAAAJMIvgU2ASMACiUAAAAAkwhNAT4A
IwARJQAAAACTCFkBOwEjABklAAAAAJYIogdBASQAICUAAAAAhhjSBQYAJAAoJQAAAACRGNgFRgEk
AAAAAQCDCAAAAQCPCAAAAQC3BQAAAgDLBgAAAwBoBQAAAQC3BQAAAgDLBgAAAwBoBQAAAQByAwAA
AQByAwAAAQByAwAAAQByAwAAAQByAwAAAQByAwAAAQByAwAAAQByAwAAAQByAwAAAQByAwAAAQBy
AwAAAQByAwAAAQByAwAAAQByAwAAAQAgAAAAAgAdAQAAAwC3BQAABABoBQAAAQBCBwAAAgDfBQAA
AwA0BwAABABoBQAAAQC3BQAAAQCDCAAAAQDhBwAAAQDhBwAAAQByAwkA0gUBABEA0gUGABkA0gUK
ACkA0gUQADEA0gUQADkA0gUQAEEA0gUQAEkA0gUQAFEA0gUQAFkA0gUQAGEA0gUQAGkA0gUGALEA
0gUGANEA0gUVAOEA0gUGAKEAWwMGAKEAZgMGAOkAYwcmAPEADgAtAPkAuAYyAOkArwQ6AMEAdQE+
AAEBogFDABEB0gUQABkBmwM6AOkAnAdLAJkAkAdSACkBrgNjAAwA0gUGAIEA0gVvAIEAtwV5AIEA
ywZ9AIkApAOBAIEAkASGAIEAfwiLAIEAhAeLAIEAnwSPAIEAlwQBADEB0gUQAIEAVQgGAIEAgQcG
AKEA0gUGAOkAAgeVAKEA3wadAIkAcQeLAKEAKACnAKkA0gUGAEEBBgGuAEEBmQi3ALkA0gW9ANkA
0gUGAC4ACwBmAS4AEwBvAS4AGwCOAS4AIwCXAS4AKwDAAS4AMwDAAS4AOwDAAS4AQwCXAS4ASwDG
AS4AUwDAAS4AWwDdAUMAYwAnAgMBawAnAqEBewAnAikCcwCOAUkCcwCOARsAWACjAAMAAQAEAAMA
CAARAAkAEwAAAEEASgEAABsETgEAAEEASgEAABsETgEAANIAUgEAAEwETgEAAHgASgEAACsETgEA
ALIHSgEAAIUETgEAAP0GSgEAAHUETgEAAIEAUgEAADsETgEAAFIFUgEAAGIETgEAAMIFVwEAAIIB
XAEAAKYHYQECAAcAAwACAAgABQABAAwABwABAA0ACQABAA4ACwABAA8ADQABABAADwABABEAEQAB
ABIAEwABABMAFQABABQAFwABABUAGQABABYAGwABABcAHQABABgAHwABABkAIQACACgAIwACACkA
JQABACoAJQACACsAJwBpAASAAAABAAAAAAAAAAAAAAAAAFAAAAAEAAAAAAAAAAAAAADFAIcAAAAA
AA8AAAAAAAAAAAAAAM4A6wcAAAAADwAAAAAAAAAAAAAAzgAICAAAAAAEAAAAAAAAAAAAAADFAKgE
AAAAAAAAAAABAAAALQYAAAAAAAAATGlzdGAxAEludDMyAGdldF9VVEY4ADxNb2R1bGU+AElucHV0
SUQAR2V0T3V0cHV0SUQAZ2V0X0lCQU4Ac2V0X0lCQU4AU3lzdGVtLklPAFNDXzIxYmJjZmVjOTY5
ZTRlNzZiNGVlMTI4ZGVjYTcyYmRhAHNldF9EYXRhAHNldF9Ld290YQBtc2NvcmxpYgBTeXN0ZW0u
Q29sbGVjdGlvbnMuR2VuZXJpYwBJbnB1dHNGaW5pc2hlZABNYXJrT3V0cHV0c0ZpbmlzaGVkAHNl
dF9TYWxkb3ByemVkAGRlZmF1bHRJbnN0YW5jZQBEb3VibGUAUnVudGltZVR5cGVIYW5kbGUAR2V0
VHlwZUZyb21IYW5kbGUARmlsZQBJbnB1dE5hbWUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlw
ZWxpbmUAVHlwZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAZ2V0X0lu
dmFyaWFudEN1bHR1cmUAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UAUGFyc2UARWRpdG9yQnJvd3Nh
YmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0
dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3Nl
bWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1l
d29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNj
cmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5
UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0Q29t
cG9uZW50RW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGlt
ZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAUHJlRXhlY3V0ZQBQb3N0RXhlY3V0ZQB2YWx1ZQBFbmNv
ZGluZwBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRvU3RyaW5nAEdldFN0cmluZwBJc01hdGNo
AGZvbGRlclBhdGgARGVjaW1hbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU0NfMjFiYmNmZWM5Njll
NGU3NmI0ZWUxMjhkZWNhNzJiZGEuZGxsAGdldF9JQkFOX0lzTnVsbABzZXRfSUJBTl9Jc051bGwA
c2V0X0RhdGFfSXNOdWxsAHNldF9Ld290YV9Jc051bGwAc2V0X1NhbGRvcHJ6ZWRfSXNOdWxsAHNl
dF9TYWxkb3BvX0lzTnVsbABzZXRfT3Bpc19Jc051bGwAc2V0X0tvbnRyYWhlbnRfSXNOdWxsAFNl
dE51bGwAc2V0X0l0ZW0AU3lzdGVtAFRyaW0AcmVzb3VyY2VNYW4AU2NyaXB0TWFpbgBTeXN0ZW0u
Q29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBJbnZh
bGlkT3BlcmF0aW9uRXhjZXB0aW9uAEZvcm1hdEV4Y2VwdGlvbgBTdHJpbmdDb21wYXJpc29uAEN1
bHR1cmVJbmZvAHNldF9TYWxkb3BvAE91dHB1dE5hbWVNYXAAT3V0cHV0TWFwAENoYXIASUZvcm1h
dFByb3ZpZGVyAElucHV0MEJ1ZmZlcgBPdXRwdXQwQnVmZmVyAFBpcGVsaW5lQnVmZmVyAFNjcmlw
dEJ1ZmZlcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAC5jdG9yAC5jY3RvcgBPdXRwdXRJRHMAU3lzdGVt
LkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291
cmNlcwBTQ18yMWJiY2ZlYzk2OWU0ZTc2YjRlZTEyOGRlY2E3MmJkYS5Qcm9wZXJ0aWVzLlJlc291
cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU0NfMjFiYmNmZWM5NjllNGU3NmI0ZWUxMjhk
ZWNhNzJiZGEuUHJvcGVydGllcwBWYXJpYWJsZXMAUmVhZEFsbExpbmVzAGxpbmVzAEJ1ZmZlckNv
bHVtbkluZGV4ZXMAR2V0Q29sdW1uSW5kZXhlcwBTZXR0aW5ncwBzZXRfT3BpcwBFcXVhbHMAU3lz
dGVtLlRleHQuUmVndWxhckV4cHJlc3Npb25zAENvbm5lY3Rpb25zAEJ1ZmZlcnMARmluaXNoT3V0
cHV0cwBDcmVhdGVOZXdPdXRwdXRSb3dzAHJvd3MAQ29uY2F0AE9iamVjdABnZXRfRW5kT2ZSb3dz
ZXQAU2V0RW5kT2ZSb3dzZXQAb3BfRXhwbGljaXQAU3BsaXQAZ2V0X0RlZmF1bHQAc2V0X0tvbnRy
YWhlbnQAVXNlckNvbXBvbmVudABQYXJlbnRDb21wb25lbnQAU2NyaXB0Q29tcG9uZW50AE1pY3Jv
c29mdC5TcWxTZXJ2ZXIuVHhTY3JpcHQATWljcm9zb2Z0LlNxbFNlcnZlci5QaXBlbGluZUhvc3QA
SW5wdXQwX1Byb2Nlc3NJbnB1dABQcmltZU91dHB1dABTeXN0ZW0uVGV4dABBZGRSb3cAdmFsaWRh
dGVSb3cASW5wdXQwX1Byb2Nlc3NJbnB1dFJvdwBOZXh0Um93AGN1cnJlbnRfcm93AFJlZ2V4AGdl
dF9Bc3NlbWJseQAAAAAJLgB0AHgAdAAAO0UAcgByAG8AcgAgAGkAbgAgAGYAaQByAHMAdAAgAGwA
aQBuAGUAIABvAGYAIABmAGkAbABlADoAIAAAIUUAcgByAG8AcgAgAGYAbwByAG0AYQB0ACAAaQBu
ACAAABsgAGwAaQBuAGUAIABvAGYAIABmAGkAbABlAAAnKABeAFsAYQAtAHoAQQAtAFoAMAAtADkA
XQB7ADEALAB9ACQAKQABNSgAXgBbAC0AXQA/AFsAMAAtADkAXQB7ADEALAB9AC4AWwAwAC0AOQBd
AHsAMgB9ACQAKQABQSgAXgAoAFsAMAAtADkAXQB7ADIAfQAuAFsAMAAtADkAXQB7ADIAfQAuAFsA
MAAtADkAXQB7ADQAfQApACQAKQABf0MAOgBcAFUAcwBlAHIAcwBcAGEAbgBjAHoAbwBcAE8AbgBl
AEQAcgBpAHYAZQBcAEQAbwBrAHUAbQBlAG4AdAB5AFwAUwBRAEwAIABTAGUAcgB2AGUAcgAgAE0A
YQBuAGEAZwBlAG0AZQBuAHQAIABTAHQAdQBkAGkAbwBcAACAm0kAcwBOAHUAbABsACAAcAByAG8A
cABlAHIAdAB5ACAAYwBhAG4AbgBvAHQAIABiAGUAIABzAGUAdAAgAHQAbwAgAEYAYQBsAHMAZQAu
ACAAQQBzAHMAaQBnAG4AIABhACAAdgBhAGwAdQBlACAAdABvACAAdABoAGUAIABjAG8AbAB1AG0A
bgAgAGkAbgBzAHQAZQBhAGQALgAAD0kAbgBwAHUAdAAgADAAABFPAHUAdABwAHUAdAAgADAAAHFT
AEMAXwAyADEAYgBiAGMAZgBlAGMAOQA2ADkAZQA0AGUANwA2AGIANABlAGUAMQAyADgAZABlAGMA
YQA3ADIAYgBkAGEALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAAAA
p/AWXPiQc0KnUpRiRqK5mAAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQERZQoHCA4NCA4ODg0IBgAD
Dg4ODgQAABJ5BwACHQ4OEnkDIAAOBAAAEmEHAAINDhKAhQYgAR0OHQMFAAERTQ0KBwgCDg4OAgIC
AgUAAgIODgUVEjkBDgkgAwESRR0IEkkDBhJFAwYdCAQgAQ4IBCABAggDIAACBSACAQgcByACAg4R
gJ0FIAEdCAgDBwEIBgACCBJJDggAARKAoRGApQUgABKAqQcgAgEOEoCpCLd6XFYZNOCJCImEXc2A
gMyRAgYIAwYdDgYGFRI5AQ4CBg4DBhIYAwYSHAMGEhADBhJRAwYSXQMGEmEDBhIkBSABARIMBCAB
Ag4EIAEBAgUgAQERTQkgBAEIDhJFEkkLIAQBCB0IHRJFEkkFIAEBElEEAAASXQUAAQESYQQAABIk
AwAAAQMoAA4DKAACBCgAEU0ECAASXQQIABJhBAgAEiQIAQAIAAAAAAAeAQABAFQCFldyYXBOb25F
eGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NDXzIxYmJjZmVjOTY5ZTRlNzZiNGVlMTI4ZGVj
YTcyYmRhAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMjIAAEkBABouTkVURnJhbWV3b3JrLFZl
cnNpb249djQuNwEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC43BAEA
AAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29y
bGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3
YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAA
AAAAAFBBRFBBRFC0AAAAuDwAAAAAAAAAAAAA0jwAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMQ8
AAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEA
EAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABY
QAAA7AMAAAAAAAAAAAAA7AM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E
7/4AAAEAAAABAAAAAAAAAAEAAAAAAD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBW
AGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAA
AACwBEwDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAACgDAAABADAAMAAwADAAMAA0
AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5AE4A
YQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBD
AF8AMgAxAGIAYgBjAGYAZQBjADkANgA5AGUANABlADcANgBiADQAZQBlADEAMgA4AGQAZQBjAGEA
NwAyAGIAZABhAAAAMAAIAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADAALgAw
AAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwAyADEAYgBiAGMAZgBlAGMA
OQA2ADkAZQA0AGUANwA2AGIANABlAGUAMQAyADgAZABlAGMAYQA3ADIAYgBkAGEALgBkAGwAbAAA
AEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAA
QAAgACAAMgAwADIAMgAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBzAAAAAAAA
AAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAQwBfADIAMQBiAGIA
YwBmAGUAYwA5ADYAOQBlADQAZQA3ADYAYgA0AGUAZQAxADIAOABkAGUAYwBhADcAMgBiAGQAYQAu
AGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAEMAXwAyADEAYgBiAGMA
ZgBlAGMAOQA2ADkAZQA0AGUANwA2AGIANABlAGUAMQAyADgAZABlAGMAYQA3ADIAYgBkAGEAAAA0
AAgAAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAOAAIAAEA
QQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAOQ8AAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_21bbcfec969e4e76b4ee128deca72bda</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">6A</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Data Flow Task 1\Read IBAN file and validate data.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task 1\Read IBAN file and validate data.Inputs[Input 0].Columns[IBAN]"
                      cachedCodepage="1250"
                      cachedDataType="str"
                      cachedLength="250"
                      cachedName="IBAN"
                      lineageId="Package\Data Flow Task 1\Validate and transform.Outputs[Output 0].Columns[IBAN]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task 1\Read IBAN file and validate data.Outputs[Output 0]"
                  hasSideEffects="true"
                  name="Output 0">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task 1\Read IBAN file and validate data.Outputs[Output 0].Columns[IBAN]"
                      codePage="1250"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task 1\Read IBAN file and validate data.Outputs[Output 0].Columns[IBAN]"
                      name="IBAN" />
                    <outputColumn
                      refId="Package\Data Flow Task 1\Read IBAN file and validate data.Outputs[Output 0].Columns[Saldo_przed]"
                      dataType="numeric"
                      lineageId="Package\Data Flow Task 1\Read IBAN file and validate data.Outputs[Output 0].Columns[Saldo_przed]"
                      name="Saldo_przed"
                      precision="18"
                      scale="4" />
                    <outputColumn
                      refId="Package\Data Flow Task 1\Read IBAN file and validate data.Outputs[Output 0].Columns[Data]"
                      codePage="1250"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task 1\Read IBAN file and validate data.Outputs[Output 0].Columns[Data]"
                      name="Data" />
                    <outputColumn
                      refId="Package\Data Flow Task 1\Read IBAN file and validate data.Outputs[Output 0].Columns[Kontrahent]"
                      codePage="1250"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task 1\Read IBAN file and validate data.Outputs[Output 0].Columns[Kontrahent]"
                      name="Kontrahent" />
                    <outputColumn
                      refId="Package\Data Flow Task 1\Read IBAN file and validate data.Outputs[Output 0].Columns[Opis]"
                      codePage="1250"
                      dataType="str"
                      length="250"
                      lineageId="Package\Data Flow Task 1\Read IBAN file and validate data.Outputs[Output 0].Columns[Opis]"
                      name="Opis" />
                    <outputColumn
                      refId="Package\Data Flow Task 1\Read IBAN file and validate data.Outputs[Output 0].Columns[Kwota]"
                      dataType="numeric"
                      lineageId="Package\Data Flow Task 1\Read IBAN file and validate data.Outputs[Output 0].Columns[Kwota]"
                      name="Kwota"
                      precision="18"
                      scale="4" />
                    <outputColumn
                      refId="Package\Data Flow Task 1\Read IBAN file and validate data.Outputs[Output 0].Columns[Saldo_po]"
                      dataType="numeric"
                      lineageId="Package\Data Flow Task 1\Read IBAN file and validate data.Outputs[Output 0].Columns[Saldo_po]"
                      name="Saldo_po"
                      precision="18"
                      scale="4" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task 1\Source - podmiot1_txt"
              componentClassID="Microsoft.FlatFileSource"
              contactInfo="Flat File Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Flat File Source"
              localeId="1045"
              name="Source - podmiot1_txt"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Specifies whether zero-length columns are treated as null."
                  name="RetainNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of an output column containing the file name. If no name is specified, no output column containing the file name will be generated."
                  name="FileNameColumnName"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Flow Task 1\Source - podmiot1_txt.Connections[FlatFileConnection]"
                  connectionManagerID="Package.ConnectionManagers[SourceConnectionFlatFile]"
                  connectionManagerRefId="Package.ConnectionManagers[SourceConnectionFlatFile]"
                  name="FlatFileConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Data Flow Task 1\Source - podmiot1_txt.Outputs[Flat File Source Output]"
                  name="Flat File Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task 1\Source - podmiot1_txt.Outputs[Flat File Source Output].Columns[Column 0]"
                      codePage="1250"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task 1\Source - podmiot1_txt.Outputs[Flat File Source Output].ExternalColumns[Column 0]"
                      length="250"
                      lineageId="Package\Data Flow Task 1\Source - podmiot1_txt.Outputs[Flat File Source Output].Columns[Column 0]"
                      name="Column 0"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Data Flow Task 1\Source - podmiot1_txt.Outputs[Flat File Source Output].ExternalColumns[Column 0]"
                      codePage="1250"
                      dataType="str"
                      length="250"
                      name="Column 0" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Data Flow Task 1\Source - podmiot1_txt.Outputs[Flat File Source Error Output]"
                  isErrorOut="true"
                  name="Flat File Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task 1\Source - podmiot1_txt.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                      codePage="1250"
                      dataType="text"
                      description="Flat File Source Error Output Column"
                      lineageId="Package\Data Flow Task 1\Source - podmiot1_txt.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                      name="Flat File Source Error Output Column" />
                    <outputColumn
                      refId="Package\Data Flow Task 1\Source - podmiot1_txt.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task 1\Source - podmiot1_txt.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Flow Task 1\Source - podmiot1_txt.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task 1\Source - podmiot1_txt.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task 1\Validate and transform"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;12"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Validate and transform"
              version="12">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    int InputsFinished = 0;

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

        if (Buffer.EndOfRowset)
        {
            InputsFinished = InputsFinished + 1;
            if (InputsFinished == 1)
            {
                FinishOutputs();
                MarkOutputsFinished();
            }
        }

    }

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

    }

    public virtual void CreateNewOutputRows()
    {
    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Collections.Generic;
using System.Data;
using System.Text.RegularExpressions;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Runtime.InteropServices;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>

    int current_row = 1;
    List<string> list = new List<string>();
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        {
            if(!ValidateData(Row.Column0, current_row)){
                bool cancel = false;
                this.ComponentMetaData.FireError(0, "My sub", "Error", string.Empty, 0, out cancel);

                throw new Exception("Wrong file format");
            }

            if (current_row > 1)
            {
                foreach (string variableName in Row.Column0.Split(';'))
                {
                    Console.WriteLine(variableName);
                    list.Add(variableName);
                }

            } else
            {
                list.Add(Row.Column0);
            }

            current_row++;
            if (current_row == 4)
            {
                string[] arr = list.ToArray();


                Output0Buffer.AddRow();

                Output0Buffer.IBAN = arr[0];
                Output0Buffer.NIP = arr[1];
                Output0Buffer.Nazwa = arr[2];
                Output0Buffer.REGON = arr[3];
                Output0Buffer.Urzad = arr[4];
                Output0Buffer.Kraj = arr[5];
                Output0Buffer.Woj = arr[6];
                Output0Buffer.Powiat = arr[7];
                Output0Buffer.gmina = arr[8];
                Output0Buffer.Ulica = arr[9];
                Output0Buffer.nrdomu = arr[10];
                Output0Buffer.nrlokalu = arr[11];
                Output0Buffer.miejscowosc = arr[12];
                Output0Buffer.kodpocztowy = arr[13];
                Output0Buffer.poczta = arr[14];
            }
        }
    }

    public Boolean ValidateData(String row, int row_number)
    {
        {
            Boolean check = false;
            switch (row_number)
            {
                case 1:
                    string strRegex = @"(^[A-Z]{2}[0-9]{26}$)";
                    check = Regex.IsMatch(row, strRegex);
                    break;
                case 2:
                    string strRegex1 = @"(^[0-9]{10}$)";
                    string strRegex2 = @"(^[0-9]{9}$)";
                    string strRegex3 = @"(^[0-9]{4}$)";

                    String[] tmp = row.Split(';');

                    Boolean a = Regex.IsMatch(tmp[0], strRegex1);
                    Boolean b = Regex.IsMatch(tmp[2], strRegex2);
                    Boolean c = Regex.IsMatch(tmp[3], strRegex3);
                    if (tmp.Length == 4 && a && b && c){
                        check = true;
                    }

                    break;
               case 3:
                    string strRegex4 = @"(^[A-Z]{2}$)";
                    string strRegex5 = @"(^[A-Z]{1}[a-z]{1,}$)";
                    string strRegex6 = @"(^(\s*|\d+)$)";
                    string strRegex7 = @"(^(\d{2}-\d{3})$)";


                    String[] tmp1 = row.Split(';');

                    Boolean a1 = Regex.IsMatch(tmp1[0], strRegex4);
                    Boolean b1 = Regex.IsMatch(tmp1[1], strRegex5);
                    Boolean c1 = Regex.IsMatch(tmp1[2], strRegex5);
                    Boolean d = Regex.IsMatch(tmp1[3], strRegex5);
                    Boolean e = Regex.IsMatch(tmp1[4], strRegex5);
                    Boolean f = Regex.IsMatch(tmp1[5], strRegex6);
                    Boolean g = Regex.IsMatch(tmp1[6], strRegex6);
                    Boolean h = Regex.IsMatch(tmp1[7], strRegex5);
                    Boolean i = Regex.IsMatch(tmp1[8], strRegex7);
                    Boolean j = Regex.IsMatch(tmp1[9], strRegex5);

                    if (tmp1.Length == 10 && a1 && b1 && c1 && d && e && f && g && h && i && j)
                    {
                        check = true;
                    }

                    break;
            }
            return check;
        }
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_006178f57ab541f8ad2fefa70fd8614a.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{4169df82-edde-426b-b9f6-6bafc4eb61b2}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_006178f57ab541f8ad2fefa70fd8614a</RootNamespace>
    <AssemblyName>SC_006178f57ab541f8ad2fefa70fd8614a</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_006178f57ab541f8ad2fefa70fd8614a" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_006178f57ab541f8ad2fefa70fd8614a.Properties.Settings.get_Default():SC_006178f57ab541f8ad2fefa70fd8614a.Properties.Sett" +
    "ings")]

namespace SC_006178f57ab541f8ad2fefa70fd8614a.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Column0
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool Column0_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String IBAN
    {
        set
        {
            this[0] = value;
        }
    }
    public bool IBAN_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String NIP
    {
        set
        {
            this[1] = value;
        }
    }
    public bool NIP_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Nazwa
    {
        set
        {
            this[2] = value;
        }
    }
    public bool Nazwa_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String REGON
    {
        set
        {
            this[3] = value;
        }
    }
    public bool REGON_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Urzad
    {
        set
        {
            this[4] = value;
        }
    }
    public bool Urzad_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Kraj
    {
        set
        {
            this[5] = value;
        }
    }
    public bool Kraj_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Woj
    {
        set
        {
            this[6] = value;
        }
    }
    public bool Woj_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Powiat
    {
        set
        {
            this[7] = value;
        }
    }
    public bool Powiat_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String gmina
    {
        set
        {
            this[8] = value;
        }
    }
    public bool gmina_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Ulica
    {
        set
        {
            this[9] = value;
        }
    }
    public bool Ulica_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(9);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String nrdomu
    {
        set
        {
            this[10] = value;
        }
    }
    public bool nrdomu_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(10);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String nrlokalu
    {
        set
        {
            this[11] = value;
        }
    }
    public bool nrlokalu_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(11);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String miejscowosc
    {
        set
        {
            this[12] = value;
        }
    }
    public bool miejscowosc_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(12);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String kodpocztowy
    {
        set
        {
            this[13] = value;
        }
    }
    public bool kodpocztowy_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(13);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String poczta
    {
        set
        {
            this[14] = value;
        }
    }
    public bool poczta_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(14);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_006178f57ab541f8ad2fefa70fd8614a</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_006178f57ab541f8ad2fefa70fd8614a</msb:DisplayName>
    <msb:ProjectId>{5E6FABD2-1B05-484A-B350-7646FBBE7ACC}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_006178f57ab541f8ad2fefa70fd8614a.csproj" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_006178f57ab541f8ad2fefa70fd8614a")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_006178f57ab541f8ad2fefa70fd8614a")]
[assembly: AssemblyCopyright("Copyright @  2022")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_006178f57ab541f8ad2fefa70fd8614a.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_006178f57ab541f8ad2fefa70fd8614a.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_006178f57ab541f8ad2fefa70fd8614a.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_006178f57ab541f8ad2fefa70fd8614a.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_006178f57ab541f8ad2fefa70fd8614a.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_006178f57ab541f8ad2fefa70fd8614a.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAPWidmIAAAAAAAAAAOAAIiALATAAACIAAAAIAAAAAAAAYkEA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACgAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAABBBAABPAAAAAGAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAaCEAAAAgAAAAIgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAYAAAAAYAAAAkAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAAKgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABE
QQAAAAAAAEgAAAACAAUAWCcAAAAZAAABAAAAAAAAAFhAAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACioTMAcAsAEAAAEAABECA28HAAAG
AnsBAAAEKAQAAAYtKxYKAigSAAAKFnIBAABwcg8AAHB+EwAAChYSAG8UAAAKchsAAHBzFQAACnoC
ewEAAAQXMT0DbwcAAAYXjR4AAAElFh87nW8WAAAKCxYMKxoHCJoNCSgXAAAKAnsCAAAECW8YAAAK
CBdYDAgHjmky4CsRAnsCAAAEA28HAAAGbxgAAAoCAnsBAAAEF1h9AQAABAJ7AQAABBpA/wAAAAJ7
AgAABG8ZAAAKEwQCewUAAARvKgAABgJ7BQAABBEEFppvDAAABgJ7BQAABBEEF5pvDgAABgJ7BQAA
BBEEGJpvEAAABgJ7BQAABBEEGZpvEgAABgJ7BQAABBEEGppvFAAABgJ7BQAABBEEG5pvFgAABgJ7
BQAABBEEHJpvGAAABgJ7BQAABBEEHZpvGgAABgJ7BQAABBEEHppvHAAABgJ7BQAABBEEHwmabx4A
AAYCewUAAAQRBB8Kmm8gAAAGAnsFAAAEEQQfC5pvIgAABgJ7BQAABBEEHwyabyQAAAYCewUAAAQR
BB8Nmm8mAAAGAnsFAAAEEQQfDppvKAAABioTMAUAXgEAAAIAABEWCgQXWUUDAAAABQAAABgAAAB4
AAAAOEEBAAByPwAAcAsDBygaAAAKCjguAQAAcmsAAHAMcocAAHANcqEAAHATBAMXjR4AAAElFh87
nW8WAAAKJRaaCCgaAAAKEwUlGJoJKBoAAAoTBiUZmhEEKBoAAAoTB45pGv4BEQVfEQZfEQdfOdUA
AAAXCjjOAAAAcrsAAHATCHLVAABwEwlyAQEAcBMKch0BAHATCwMXjR4AAAElFh87nW8WAAAKJRaa
EQgoGgAAChMMJReaEQkoGgAAChMNJRiaEQkoGgAAChMOJRmaEQkoGgAAChMPJRqaEQkoGgAAChMQ
JRuaEQooGgAAChMRJRyaEQooGgAAChMSJR2aEQkoGgAAChMTJR6aEQsoGgAAChMUJR8JmhEJKBoA
AAoTFY5pHwr+AREMXxENXxEOXxEPXxEQXxERXxESXxETXxEUXxEVXywCFwoGKmYCF30BAAAEAnMb
AAAKfQIAAAQCKC0AAAYqKgIDBAUoHAAACipSAnsdAAAKAnseAAAKFpRvHwAACioiAhYoIAAACioe
AighAAAKKh4CKCIAAAoqJgIWAygjAAAKKloDLAgCFigkAAAKKnJBAQBwcyUAAAp6JgIXAygjAAAK
KloDLAgCFygkAAAKKnJBAQBwcyUAAAp6JgIYAygjAAAKKloDLAgCGCgkAAAKKnJBAQBwcyUAAAp6
JgIZAygjAAAKKloDLAgCGSgkAAAKKnJBAQBwcyUAAAp6JgIaAygjAAAKKloDLAgCGigkAAAKKnJB
AQBwcyUAAAp6JgIbAygjAAAKKloDLAgCGygkAAAKKnJBAQBwcyUAAAp6JgIcAygjAAAKKloDLAgC
HCgkAAAKKnJBAQBwcyUAAAp6JgIdAygjAAAKKloDLAgCHSgkAAAKKnJBAQBwcyUAAAp6JgIeAygj
AAAKKloDLAgCHigkAAAKKnJBAQBwcyUAAAp6KgIfCQMoIwAACipeAywJAh8JKCQAAAoqckEBAHBz
JQAACnoqAh8KAygjAAAKKl4DLAkCHwooJAAACipyQQEAcHMlAAAKeioCHwsDKCMAAAoqXgMsCQIf
CygkAAAKKnJBAQBwcyUAAAp6KgIfDAMoIwAACipeAywJAh8MKCQAAAoqckEBAHBzJQAACnoqAh8N
AygjAAAKKl4DLAkCHw0oJAAACipyQQEAcHMlAAAKeioCHw4DKCMAAAoqXgMsCQIfDigkAAAKKnJB
AQBwcyUAAAp6HgIoJgAACioeAignAAAKKn4CKCgAAAoCAnM1AAAGfQMAAAQCAnM2AAAGfQQAAAQq
EzAEAE8AAAAAAAAABHLeAQBwGm8pAAAKLBUCBQIDKCoAAAoOBHMGAAAGbzMAAAYFbysAAAosIwIC
ewYAAAQXWH0GAAAEAnsGAAAEFzMMAm8vAAAGAigwAAAGKgYqbgJ7BQAABCwSAnsFAAAEbysAAAYC
FH0FAAAEKgAAABMwBQA9AAAAAwAAERYKKy4EBpQOBHLuAQBwKCwAAAozGQIFBpoCBAaUKCoAAAoO
BHMLAAAGfQUAAAQGF1gKBgMyzgJvMgAABipKKwcCA280AAAGA28JAAAGLfEqOgIoLQAACgIDfQcA
AAQqOgIoLQAACgIDfQgAAAQqHgIoLQAACiqufgkAAAQtHnIAAgBw0AgAAAIoLgAACm8vAAAKczAA
AAqACQAABH4JAAAEKhp+CgAABCoeAoAKAAAEKhp+CwAABCoeAigxAAAKKi5zPAAABoALAAAEKkJT
SkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAGAKAAAjfgAAzAoAAIQJAAAjU3RyaW5n
cwAAAABQFAAAdAIAACNVUwDEFgAAEAAAACNHVUlEAAAA1BYAACwCAAAjQmxvYgAAAAAAAAACAAAB
VxWiCQkBAAAA+gEzABYAAAEAAAAlAAAACQAAAAsAAAA9AAAANAAAADEAAAAQAAAAAwAAAAQAAAAj
AAAAJAAAAAEAAAABAAAABQAAAAEAAAAAABMEAQAAAAAABgDxAu8GBgCFA+8GBgA9AtwGDwBjBwAA
BgBqArIFBgDUArIFBgC1ArIFBgBsA7IFBgARA7IFBgAqA7IFBgCBArIFBgCcAsADCgBFA4oBBgAm
AN4ACgBxBooBDgBiBooBCgD7BYoBCgCWCIoBBgBACGoFBgAgAtwGBgCCBg8HBgDvBZ0FEgDwAf0D
EgBRAv0DEgDYAYgFBgAFAu8GFgABAJIGBgDdA2oFBgDUBWoFBgA3BmoFBgBuAWoFEgBTCeAHBgDE
BWoFBgDeBWoFBgCrAWoFBgBKAWoFBgBlCbIFAAAAAC0AAAAAAAEAAQABABAAfQUAABQAAQABAAEA
EABHBgAAPQADAAYAAQAQAFQGAAA9AAMACwABABAAeAgAAEkAAwAtAAEAEAD/BwAATQAHADUAAQAQ
AKEHAABNAAgANgAAABAAFgdyB00ACQA3AAABEADQB3IHZQALADsAAQBHCd0AAQDDCOAABgD/B+cA
BgChB+sABgBUBu8AAQAXAd0AAQCGCPMAAQCGCPMAEQBxBfcAEQDIAfsAEQA6Af8AUCAAAAAAxgCj
AwYAAQBYIAAAAADGAK4DBgABAGAgAAAAAMYAKAkDAQEAHCIAAAAAhgCzAAkBAgCGIwAAAACGGMUG
BgAEAKAjAAAAAIYYxQZ1AAQAqyMAAAAAhggaAA8BBwDAIwAAAACGCDsEkQAHAMkjAAAAAIYAPwmR
AAcA0SMAAAAAhgBaCJEABwCgIwAAAACGGMUGdQAHANkjAAAAAIYISgAQAAoA4yMAAAAAhghOBBMB
CwD6IwAAAACGCF0AEAAMAAQkAAAAAIYIbwQTAQ0AGyQAAAAAhgjLABAADgAlJAAAAACGCLIEEwEP
ADwkAAAAAIYIUwAQABAARiQAAAAAhgheBBMBEQBdJAAAAACGCAkBEAASAGckAAAAAIYI2gQTARMA
fiQAAAAAhgjsAxAAFACIJAAAAACGCOsEEwEVAJ8kAAAAAIYI9QMQABYAqSQAAAAAhgj7BBMBFwDA
JAAAAACGCDUIEAAYAMokAAAAAIYICgUTARkA4SQAAAAAhgiTABAAGgDrJAAAAACGCI8EEwEbAAIl
AAAAAIYIiQAQABwADSUAAAAAhgh+BBMBHQAlJQAAAACGCBYJEAAeADAlAAAAAIYIMAUTAR8ASCUA
AAAAhggJCRAAIABTJQAAAACGCBwFEwEhAGslAAAAAIYI+QAQACIAdiUAAAAAhgjDBBMBIwCOJQAA
AACGCHQJEAAkAJklAAAAAIYIQgUTASUAsSUAAAAAhgjAABAAJgC8JQAAAACGCKAEEwEnANQlAAAA
AIYAIQkGACgA3CUAAAAAhgBXCAYAKADRIwAAAACGAFoIkQAoAOQlAAAAAIYYxQYGACgABCYAAAAA
xgDwCBgBKABfJgAAAADGARMIBgAsAGEmAAAAAIEAJgEGACwAgCYAAAAAxgD9CCIBLABfJgAAAADG
ASEIBgAwAMkmAAAAAMYB6QgDATAAXyYAAAAAxgEoCQMBMQDcJgAAAACGGMUGLgEyAOsmAAAAAIYY
xQYuATMA+iYAAAAAgxjFBgYANAACJwAAAACTCH4GNAE0AC4nAAAAAJMIsAE5ATQANScAAAAAkwi8
AT4BNAA9JwAAAACWCGwIRAE1AEQnAAAAAIYYxQYGADUATCcAAAAAkRjLBkkBNQAAAAEAQwkAAAEA
TwkAAAIAPAYAAAEAdwYAAAIAqwcAAAMACQYAAAEAdwYAAAIAqwcAAAMACQYAAAEAugMAAAEAugMA
AAEAugMAAAEAugMAAAEAugMAAAEAugMAAAEAugMAAAEAugMAAAEAugMAAAEAugMAAAEAugMAAAEA
ugMAAAEAugMAAAEAugMAAAEAugMAAAEAugMAAAEAugMAAAEAugMAAAEAugMAAAEAugMAAAEAugMA
AAEAugMAAAEAugMAAAEAugMAAAEAugMAAAEAugMAAAEAugMAAAEAugMAAAEAugMAAAEAugMAAAEA
NgAAAAIAdgEAAAMAdwYAAAQACQYAAAEAGQgAAAIA0gYAAAMACwgAAAQACQYAAAEAdwYAAAEAQwkA
AAEAnAgAAAEAnAgAAAEAugMJAMUGAQARAMUGBgAZAMUGCgApAMUGEAAxAMUGEAA5AMUGEABBAMUG
EABJAMUGEABRAMUGEABZAMUGEABhAMUGEABpAMUGBgChAMUGBgDBAMUGFQDRAMUGBgCRAKMDBgCR
AK4DBgCRAJ0AJQDhAG4JKgDZALsGLQDpAMUGEADhAGYIOAD5AIABPwAMABMBSgAMAFkJUAABAeQD
bwAMAMUGBgB5AMUGdQB5AHcGfwB5AKsHgwCBANoDhwB5AFIFjAB5AD8JkQB5AFoIkQB5AGEFlQB5
AFkFAQAJAcUGEAB5ACEJBgB5AFcIBgCRAMUGBgDhANkHmwCRAL8HowCBAEcIkQCRAD4ArQCZAMUG
BgAZAVwBtAAZAWEJvQCpAMUGwwDJAMUGBgAuAAsAZAEuABMAbQEuABsAjAEuACMAlQEuACsAvgEu
ADMAvgEuADsAvgEuAEMAlQEuAEsAxAEuAFMAvgEuAFsA2wFDAGMAJQIDAWsAJQJhAXsAJQIpBHMA
jAFJBHMAjAEbAFYAqQADAAEABAADAAgAIQAJACMAAAAeAE0BAAA/BFEBAABOAE0BAABSBFEBAABh
AE0BAABzBFEBAADPAE0BAAC2BFEBAABXAE0BAABiBFEBAAANAU0BAADeBFEBAADwA00BAADvBFEB
AAD5A00BAAD/BFEBAAA5CE0BAAAOBVEBAACXAE0BAACTBFEBAACNAE0BAACCBFEBAAAaCU0BAAA0
BVEBAAANCU0BAAAgBVEBAAD9AE0BAADHBFEBAAB4CU0BAABGBVEBAADEAE0BAACkBFEBAACCBlUB
AADQAVoBAABwCF8BAgAHAAMAAgAIAAUAAQAMAAcAAQANAAkAAQAOAAsAAQAPAA0AAQAQAA8AAQAR
ABEAAQASABMAAQATABUAAQAUABcAAQAVABkAAQAWABsAAQAXAB0AAQAYAB8AAQAZACEAAQAaACMA
AQAbACUAAQAcACcAAQAdACkAAQAeACsAAQAfAC0AAQAgAC8AAQAhADEAAQAiADMAAQAjADUAAQAk
ADcAAQAlADkAAQAmADsAAQAnAD0AAQAoAD8AAQApAEEAAgA4AEMAAgA5AEUAAQA6AEUAAgA7AEcA
RAAEgAAAAQAAAAAAAAAAAAAAAABlAAAABAAAAAAAAAAAAAAAywDVAAAAAAAPAAAAAAAAAAAAAADU
AKYIAAAAAA8AAAAAAAAAAAAAANQAyAgAAAAABAAAAAAAAAAAAAAAywBqBQAAAAAPAAAAAAAAAAAA
AADUABMGAAAAAAAAAAABAAAAIAcAAAAAAAAASURUU0NvbXBvbmVudE1ldGFEYXRhMTAwAGdldF9D
b2x1bW4wAExpc3RgMQA8TW9kdWxlPgBJbnB1dElEAEdldE91dHB1dElEAHNldF9JQkFOAHNldF9S
RUdPTgBzZXRfTklQAFNDXzAwNjE3OGY1N2FiNTQxZjhhZDJmZWZhNzBmZDg2MTRhAHNldF9VbGlj
YQBzZXRfZ21pbmEAZ2V0X0NvbXBvbmVudE1ldGFEYXRhAFZhbGlkYXRlRGF0YQBzZXRfcG9jenRh
AHNldF9OYXp3YQBtc2NvcmxpYgBTeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYwBzZXRfbWllanNj
b3dvc2MAc2V0X1VyemFkAEFkZABJbnB1dHNGaW5pc2hlZABNYXJrT3V0cHV0c0ZpbmlzaGVkAGRl
ZmF1bHRJbnN0YW5jZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBDb25zb2xl
AElucHV0TmFtZQBXcml0ZUxpbmUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUAVHlw
ZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAQXBwbGljYXRpb25TZXR0
aW5nc0Jhc2UARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUA
RGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJy
b3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJr
QXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25B
dHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRp
b25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0
dHJpYnV0ZQBTU0lTU2NyaXB0Q29tcG9uZW50RW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNv
bXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAUHJlRXhlY3V0ZQBQ
b3N0RXhlY3V0ZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAEdldFN0cmluZwBJc01h
dGNoAHNldF9LcmFqAHNldF9Xb2oAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNDXzAwNjE3OGY1N2Fi
NTQxZjhhZDJmZWZhNzBmZDg2MTRhLmRsbABnZXRfQ29sdW1uMF9Jc051bGwAc2V0X0lCQU5fSXNO
dWxsAHNldF9SRUdPTl9Jc051bGwAc2V0X05JUF9Jc051bGwAc2V0X1VsaWNhX0lzTnVsbABzZXRf
Z21pbmFfSXNOdWxsAHNldF9wb2N6dGFfSXNOdWxsAHNldF9OYXp3YV9Jc051bGwAc2V0X21pZWpz
Y293b3NjX0lzTnVsbABzZXRfVXJ6YWRfSXNOdWxsAHNldF9LcmFqX0lzTnVsbABzZXRfV29qX0lz
TnVsbABzZXRfUG93aWF0X0lzTnVsbABzZXRfbnJsb2thbHVfSXNOdWxsAHNldF9ucmRvbXVfSXNO
dWxsAHNldF9rb2Rwb2N6dG93eV9Jc051bGwAU2V0TnVsbABzZXRfSXRlbQBTeXN0ZW0AcmVzb3Vy
Y2VNYW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlv
bgBTeXN0ZW0uUmVmbGVjdGlvbgBJbnZhbGlkT3BlcmF0aW9uRXhjZXB0aW9uAFN0cmluZ0NvbXBh
cmlzb24AQ3VsdHVyZUluZm8AT3V0cHV0TmFtZU1hcABPdXRwdXRNYXAATWljcm9zb2Z0LlNxbFNl
cnZlci5EVFNQaXBlbGluZVdyYXAAQ2hhcgByb3dfbnVtYmVyAElucHV0MEJ1ZmZlcgBPdXRwdXQw
QnVmZmVyAFBpcGVsaW5lQnVmZmVyAFNjcmlwdEJ1ZmZlcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAE1p
Y3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lLldyYXBwZXIARmlyZUVycm9yAC5jdG9yAC5j
Y3RvcgBPdXRwdXRJRHMAU3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVy
U2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTQ18wMDYxNzhmNTdhYjU0MWY4YWQyZmVmYTcwZmQ4
NjE0YS5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU0NfMDA2
MTc4ZjU3YWI1NDFmOGFkMmZlZmE3MGZkODYxNGEuUHJvcGVydGllcwBWYXJpYWJsZXMAQnVmZmVy
Q29sdW1uSW5kZXhlcwBHZXRDb2x1bW5JbmRleGVzAFNldHRpbmdzAEVxdWFscwBTeXN0ZW0uVGV4
dC5SZWd1bGFyRXhwcmVzc2lvbnMAQ29ubmVjdGlvbnMAQnVmZmVycwBGaW5pc2hPdXRwdXRzAENy
ZWF0ZU5ld091dHB1dFJvd3MAc2V0X1Bvd2lhdABPYmplY3QAZ2V0X0VuZE9mUm93c2V0AFNldEVu
ZE9mUm93c2V0AFNwbGl0AGdldF9EZWZhdWx0AFVzZXJDb21wb25lbnQAUGFyZW50Q29tcG9uZW50
AFNjcmlwdENvbXBvbmVudABNaWNyb3NvZnQuU3FsU2VydmVyLlR4U2NyaXB0AGxpc3QATWljcm9z
b2Z0LlNxbFNlcnZlci5QaXBlbGluZUhvc3QASW5wdXQwX1Byb2Nlc3NJbnB1dABQcmltZU91dHB1
dABzZXRfbnJsb2thbHUAc2V0X25yZG9tdQBBZGRSb3cASW5wdXQwX1Byb2Nlc3NJbnB1dFJvdwBO
ZXh0Um93AGN1cnJlbnRfcm93AFJlZ2V4AFRvQXJyYXkAZ2V0X0Fzc2VtYmx5AEVtcHR5AHNldF9r
b2Rwb2N6dG93eQAADU0AeQAgAHMAdQBiAAALRQByAHIAbwByAAAjVwByAG8AbgBnACAAZgBpAGwA
ZQAgAGYAbwByAG0AYQB0AAArKABeAFsAQQAtAFoAXQB7ADIAfQBbADAALQA5AF0AewAyADYAfQAk
ACkAARsoAF4AWwAwAC0AOQBdAHsAMQAwAH0AJAApAAEZKABeAFsAMAAtADkAXQB7ADkAfQAkACkA
ARkoAF4AWwAwAC0AOQBdAHsANAB9ACQAKQABGSgAXgBbAEEALQBaAF0AewAyAH0AJAApAAErKABe
AFsAQQAtAFoAXQB7ADEAfQBbAGEALQB6AF0AewAxACwAfQAkACkAARsoAF4AKABcAHMAKgB8AFwA
ZAArACkAJAApAAAjKABeACgAXABkAHsAMgB9AC0AXABkAHsAMwB9ACkAJAApAAGAm0kAcwBOAHUA
bABsACAAcAByAG8AcABlAHIAdAB5ACAAYwBhAG4AbgBvAHQAIABiAGUAIABzAGUAdAAgAHQAbwAg
AEYAYQBsAHMAZQAuACAAQQBzAHMAaQBnAG4AIABhACAAdgBhAGwAdQBlACAAdABvACAAdABoAGUA
IABjAG8AbAB1AG0AbgAgAGkAbgBzAHQAZQBhAGQALgAAD0kAbgBwAHUAdAAgADAAABFPAHUAdABw
AHUAdAAgADAAAHFTAEMAXwAwADAANgAxADcAOABmADUANwBhAGIANQA0ADEAZgA4AGEAZAAyAGYA
ZQBmAGEANwAwAGYAZAA4ADYAMQA0AGEALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1
AHIAYwBlAHMAAAAADxySWqyf+EiRh6G6BHtB5QAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQERXQkH
BQIdDggOHQ4EIAASbQIGDgogBgEIDg4OCBACBiABHQ4dAwQAAQEOBRUSOQEOBSABARMABSAAHRMA
GAcWAg4ODg4CAgIODg4OAgICAgICAgICAgUAAgIODgkgAwESQR0IEkUDBhJBAwYdCAQgAQ4IBCAB
AggDIAACBSACAQgcByACAg4RgIkFIAEdCAgDBwEIBgACCBJFDggAARKAjRGAkQUgABKAlQcgAgEO
EoCVCLd6XFYZNOCJCImEXc2AgMyRAgYIBgYVEjkBDgMGEhgDBhIcAwYSEAMGEkkDBhJVAwYSWQMG
EiQFIAEBEgwFIAICDggDIAAOBCABAQIJIAQBCA4SQRJFCyAEAQgdCB0SQRJFBSABARJJBAAAElUE
AAASWQUAAQESWQQAABIkAwAAAQMoAA4DKAACBAgAElUECAASWQQIABIkCAEACAAAAAAAHgEAAQBU
AhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTQ18wMDYxNzhmNTdhYjU0MWY4
YWQyZmVmYTcwZmQ4NjE0YQAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDIyAABJAQAaLk5FVEZy
YW1ld29yayxWZXJzaW9uPXY0LjcBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJhbWV3
b3JrIDQuNwQBAAAAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VS
ZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGlj
S2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJj
ZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAOEEAAAAAAAAAAAAAUkEAAAAgAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAERBAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAA
EAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAA
AAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWGAA
AOwDAAAAAAAAAAAAAOwDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+
AAABAAAAAQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBh
AHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAA
sARMAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAAoAwAAAQAwADAAMAAwADAANABi
ADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4AeQBOAGEA
bQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAQwBf
ADAAMAA2ADEANwA4AGYANQA3AGEAYgA1ADQAMQBmADgAYQBkADIAZgBlAGYAYQA3ADAAZgBkADgA
NgAxADQAYQAAADAACAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgAwAC4AMAAA
AHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8AMAAwADYAMQA3ADgAZgA1ADcA
YQBiADUANAAxAGYAOABhAGQAMgBmAGUAZgBhADcAMABmAGQAOAA2ADEANABhAC4AZABsAGwAAABI
ABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAA
IAAgADIAMAAyADIAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAAAAAAAAAA
AHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAEMAXwAwADAANgAxADcA
OABmADUANwBhAGIANQA0ADEAZgA4AGEAZAAyAGYAZQBmAGEANwAwAGYAZAA4ADYAMQA0AGEALgBk
AGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBDAF8AMAAwADYAMQA3ADgA
ZgA1ADcAYQBiADUANAAxAGYAOABhAGQAMgBmAGUAZgBhADcAMABmAGQAOAA2ADEANABhAAAANAAI
AAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAADgACAABAEEA
cwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAwAAABkMQAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_006178f57ab541f8ad2fefa70fd8614a</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">B2</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Data Flow Task 1\Validate and transform.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task 1\Validate and transform.Inputs[Input 0].Columns[Column 0]"
                      cachedCodepage="1250"
                      cachedDataType="str"
                      cachedLength="250"
                      cachedName="Column 0"
                      lineageId="Package\Data Flow Task 1\Source - podmiot1_txt.Outputs[Flat File Source Output].Columns[Column 0]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task 1\Validate and transform.Outputs[Output 0]"
                  hasSideEffects="true"
                  name="Output 0">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task 1\Validate and transform.Outputs[Output 0].Columns[IBAN]"
                      codePage="1250"
                      dataType="str"
                      length="250"
                      lineageId="Package\Data Flow Task 1\Validate and transform.Outputs[Output 0].Columns[IBAN]"
                      name="IBAN" />
                    <outputColumn
                      refId="Package\Data Flow Task 1\Validate and transform.Outputs[Output 0].Columns[NIP]"
                      codePage="1250"
                      dataType="str"
                      length="250"
                      lineageId="Package\Data Flow Task 1\Validate and transform.Outputs[Output 0].Columns[NIP]"
                      name="NIP" />
                    <outputColumn
                      refId="Package\Data Flow Task 1\Validate and transform.Outputs[Output 0].Columns[Nazwa]"
                      codePage="1250"
                      dataType="str"
                      length="250"
                      lineageId="Package\Data Flow Task 1\Validate and transform.Outputs[Output 0].Columns[Nazwa]"
                      name="Nazwa" />
                    <outputColumn
                      refId="Package\Data Flow Task 1\Validate and transform.Outputs[Output 0].Columns[REGON]"
                      codePage="1250"
                      dataType="str"
                      length="250"
                      lineageId="Package\Data Flow Task 1\Validate and transform.Outputs[Output 0].Columns[REGON]"
                      name="REGON" />
                    <outputColumn
                      refId="Package\Data Flow Task 1\Validate and transform.Outputs[Output 0].Columns[Urzad]"
                      codePage="1250"
                      dataType="str"
                      length="250"
                      lineageId="Package\Data Flow Task 1\Validate and transform.Outputs[Output 0].Columns[Urzad]"
                      name="Urzad" />
                    <outputColumn
                      refId="Package\Data Flow Task 1\Validate and transform.Outputs[Output 0].Columns[Kraj]"
                      codePage="1250"
                      dataType="str"
                      length="250"
                      lineageId="Package\Data Flow Task 1\Validate and transform.Outputs[Output 0].Columns[Kraj]"
                      name="Kraj" />
                    <outputColumn
                      refId="Package\Data Flow Task 1\Validate and transform.Outputs[Output 0].Columns[Woj]"
                      codePage="1250"
                      dataType="str"
                      length="250"
                      lineageId="Package\Data Flow Task 1\Validate and transform.Outputs[Output 0].Columns[Woj]"
                      name="Woj" />
                    <outputColumn
                      refId="Package\Data Flow Task 1\Validate and transform.Outputs[Output 0].Columns[Powiat]"
                      codePage="1250"
                      dataType="str"
                      length="250"
                      lineageId="Package\Data Flow Task 1\Validate and transform.Outputs[Output 0].Columns[Powiat]"
                      name="Powiat" />
                    <outputColumn
                      refId="Package\Data Flow Task 1\Validate and transform.Outputs[Output 0].Columns[gmina]"
                      codePage="1250"
                      dataType="str"
                      length="250"
                      lineageId="Package\Data Flow Task 1\Validate and transform.Outputs[Output 0].Columns[gmina]"
                      name="gmina" />
                    <outputColumn
                      refId="Package\Data Flow Task 1\Validate and transform.Outputs[Output 0].Columns[Ulica]"
                      codePage="1250"
                      dataType="str"
                      length="250"
                      lineageId="Package\Data Flow Task 1\Validate and transform.Outputs[Output 0].Columns[Ulica]"
                      name="Ulica" />
                    <outputColumn
                      refId="Package\Data Flow Task 1\Validate and transform.Outputs[Output 0].Columns[nr_domu]"
                      codePage="1250"
                      dataType="str"
                      length="250"
                      lineageId="Package\Data Flow Task 1\Validate and transform.Outputs[Output 0].Columns[nr_domu]"
                      name="nr_domu" />
                    <outputColumn
                      refId="Package\Data Flow Task 1\Validate and transform.Outputs[Output 0].Columns[nr_lokalu]"
                      codePage="1250"
                      dataType="str"
                      length="250"
                      lineageId="Package\Data Flow Task 1\Validate and transform.Outputs[Output 0].Columns[nr_lokalu]"
                      name="nr_lokalu" />
                    <outputColumn
                      refId="Package\Data Flow Task 1\Validate and transform.Outputs[Output 0].Columns[miejscowosc]"
                      codePage="1250"
                      dataType="str"
                      length="250"
                      lineageId="Package\Data Flow Task 1\Validate and transform.Outputs[Output 0].Columns[miejscowosc]"
                      name="miejscowosc" />
                    <outputColumn
                      refId="Package\Data Flow Task 1\Validate and transform.Outputs[Output 0].Columns[kod_pocztowy]"
                      codePage="1250"
                      dataType="str"
                      length="250"
                      lineageId="Package\Data Flow Task 1\Validate and transform.Outputs[Output 0].Columns[kod_pocztowy]"
                      name="kod_pocztowy" />
                    <outputColumn
                      refId="Package\Data Flow Task 1\Validate and transform.Outputs[Output 0].Columns[poczta]"
                      codePage="1250"
                      dataType="str"
                      length="250"
                      lineageId="Package\Data Flow Task 1\Validate and transform.Outputs[Output 0].Columns[poczta]"
                      name="poczta" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Data Flow Task 1.Paths[Data Conversion Output]"
              endId="Package\Data Flow Task 1\Destination - FILE_1_TMP.Inputs[Destination Input]"
              name="Data Conversion Output"
              startId="Package\Data Flow Task 1\Data Conversion.Outputs[Data Conversion Output]" />
            <path
              refId="Package\Data Flow Task 1.Paths[Data Conversion Output1]"
              endId="Package\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input]"
              name="Data Conversion Output"
              startId="Package\Data Flow Task 1\Data Conversion 1.Outputs[Data Conversion Output]" />
            <path
              refId="Package\Data Flow Task 1.Paths[Flat File Source Output]"
              endId="Package\Data Flow Task 1\Validate and transform.Inputs[Input 0]"
              name="Flat File Source Output"
              startId="Package\Data Flow Task 1\Source - podmiot1_txt.Outputs[Flat File Source Output]" />
            <path
              refId="Package\Data Flow Task 1.Paths[Multicast Output 1]"
              endId="Package\Data Flow Task 1\Data Conversion.Inputs[Data Conversion Input]"
              name="Multicast Output 1"
              startId="Package\Data Flow Task 1\Multicast.Outputs[Multicast Output 1]" />
            <path
              refId="Package\Data Flow Task 1.Paths[Multicast Output 2]"
              endId="Package\Data Flow Task 1\Read IBAN file and validate data.Inputs[Input 0]"
              name="Multicast Output 2"
              startId="Package\Data Flow Task 1\Multicast.Outputs[Multicast Output 2]" />
            <path
              refId="Package\Data Flow Task 1.Paths[Output 0]"
              endId="Package\Data Flow Task 1\Multicast.Inputs[Multicast Input 1]"
              name="Output 0"
              startId="Package\Data Flow Task 1\Validate and transform.Outputs[Output 0]" />
            <path
              refId="Package\Data Flow Task 1.Paths[Output 01]"
              endId="Package\Data Flow Task 1\Data Conversion 1.Inputs[Data Conversion Input]"
              name="Output 0"
              startId="Package\Data Flow Task 1\Read IBAN file and validate data.Outputs[Output 0]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[{E4C45960-C6C8-4B3D-86B7-259B3DAD88AE\}]"
      DTS:CreationName=""
      DTS:DTSID="{E4C45960-C6C8-4B3D-86B7-259B3DAD88AE}"
      DTS:From="Package\Czyszczenei tabel tymczasowych"
      DTS:LogicalAnd="True"
      DTS:ObjectName="{E4C45960-C6C8-4B3D-86B7-259B3DAD88AE}"
      DTS:To="Package\Data Flow Task 1" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="189.6,41.6"
          Id="Package\Czyszczenei tabel tymczasowych"
          TopLeft="5.50000000000001,5.49999999999995" />
        <NodeLayout
          Size="159.2,41.6"
          Id="Package\Data Flow Task 1"
          TopLeft="18.2000000993411,107.966666673554" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[{E4C45960-C6C8-4B3D-86B7-259B3DAD88AE\}]"
          TopLeft="99.0500000496705,47.1">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60.8666666735544"
              Start="0,0"
              End="0,53.3666666735544">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,53.3666666735544" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Data Flow Task 1">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="228,41.6"
          Id="Package\Data Flow Task 1\Read IBAN file and validate data"
          TopLeft="457.499981820585,41.6000003306075" />
        <NodeLayout
          Size="183.2,41.6"
          Id="Package\Data Flow Task 1\Validate and transform"
          TopLeft="235.833323962159,149.933334524896" />
        <NodeLayout
          Size="119.2,41.6"
          Id="Package\Data Flow Task 1\Multicast"
          TopLeft="472.499981224538,154.266667892668" />
        <NodeLayout
          Size="164,41.6"
          Id="Package\Data Flow Task 1\Data Conversion 1"
          TopLeft="717.499971489113,41.6000003306071" />
        <NodeLayout
          Size="180,41.6"
          Id="Package\Data Flow Task 1\Source - podmiot1_txt"
          TopLeft="200.066659348541,21.9666667975319" />
        <NodeLayout
          Size="156,41.6"
          Id="Package\Data Flow Task 1\Data Conversion"
          TopLeft="458.333315120804,261.733335413403" />
        <NodeLayout
          Size="171.2,41.6"
          Id="Package\Data Flow Task 1\OLE DB Destination"
          TopLeft="921.666630042924,38.1333336363896" />
        <NodeLayout
          Size="200.8,41.6"
          Id="Package\Data Flow Task 1\Destination - FILE_1_TMP"
          TopLeft="691.333306080766,262.233334566222" />
        <EdgeLayout
          Id="Package\Data Flow Task 1.Paths[Output 01]"
          TopLeft="685.499981820585,62.4000003306073">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="31.9999896685281,0"
              Start="0,0"
              End="24.4999896685281,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="24.4999896685281,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task 1.Paths[Output 0]"
          TopLeft="419.033323962159,172.900001208782">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="53.4666572623787,0"
              Start="0,0"
              End="45.9666572623787,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="45.9666572623787,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task 1.Paths[Multicast Output 2]"
          TopLeft="532.099981224538,154.266667892668">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="39.400000596047,-71.0666675620605"
              Start="0,0"
              End="39.400000596047,-63.5666675620605">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-31.5333337810303" />
                  <mssgle:CubicBezierSegment
                    Point1="0,-31.5333337810303"
                    Point2="0,-35.5333337810303"
                    Point3="4,-35.5333337810303" />
                  <mssgle:LineSegment
                    End="35.400000596047,-35.5333337810303" />
                  <mssgle:CubicBezierSegment
                    Point1="35.400000596047,-35.5333337810303"
                    Point2="39.400000596047,-35.5333337810303"
                    Point3="39.400000596047,-39.5333337810303" />
                  <mssgle:LineSegment
                    End="39.400000596047,-63.5666675620605" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task 1.Paths[Multicast Output 1]"
          TopLeft="534.216648172671,195.866667892668">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,65.8666675207351"
              Start="0,0"
              End="0,58.3666675207351">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,58.3666675207351" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task 1.Paths[Flat File Source Output]"
          TopLeft="290.833325700628,63.5666667975319">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,86.3666677273645"
              Start="0,0"
              End="0,78.8666677273645">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,78.8666677273645" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task 1.Paths[Data Conversion Output1]"
          TopLeft="881.499971489113,60.6666669834983">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="40.1666585538114,0"
              Start="0,0"
              End="32.6666585538114,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="32.6666585538114,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task 1.Paths[Data Conversion Output]"
          TopLeft="614.333315120804,282.783334989813">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="76.9999909599622,0"
              Start="0,0"
              End="69.4999909599622,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="69.4999909599622,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Data Flow Task 1\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Data Flow Task 1\Destination - FILE_1_TMP">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>